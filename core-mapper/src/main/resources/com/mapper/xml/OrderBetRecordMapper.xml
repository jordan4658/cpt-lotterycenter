<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrderBetRecordMapper">
  <resultMap id="BaseResultMap" type="com.mapper.domain.OrderBetRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="lottery_id" jdbcType="INTEGER" property="lotteryId" />
    <result column="play_id" jdbcType="INTEGER" property="playId" />
    <result column="setting_id" jdbcType="INTEGER" property="settingId" />
    <result column="bet_number" jdbcType="CHAR" property="betNumber" />
    <result column="bet_count" jdbcType="INTEGER" property="betCount" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="win_amount" jdbcType="DECIMAL" property="winAmount" />
    <result column="back_amount" jdbcType="DECIMAL" property="backAmount" />
    <result column="god_order_id" jdbcType="INTEGER" property="godOrderId" />
    <result column="tb_status" jdbcType="CHAR" property="tbStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, order_id, lottery_id, play_id, setting_id, bet_number, bet_count, bet_amount, 
    win_amount, back_amount, god_order_id, tb_status, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.mapper.domain.OrderBetRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit&gt;=0 and offset != null">
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from order_bet_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="sumBetamountbyUserid" parameterType="java.util.HashMap"  resultType="java.lang.Double">
   
  SELECT ifnull(SUM(o.bet_amount),0) from order_bet_record o where o.user_id='${params.userid}' and 
  o.tb_status in ('WIN','NO_WIN','HE')   and o.create_time  &gt;= '${params.startTime}' and o.create_time &lt; '${params.endTime}';
  
   </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_bet_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mapper.domain.OrderBetRecordExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.mapper.domain.OrderBetRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_bet_record (user_id, order_id, lottery_id, 
      play_id, setting_id, bet_number, 
      bet_count, bet_amount, win_amount, 
      back_amount, god_order_id, tb_status, 
      create_time, update_time, is_delete
      )
    values (#{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{lotteryId,jdbcType=INTEGER}, 
      #{playId,jdbcType=INTEGER}, #{settingId,jdbcType=INTEGER}, #{betNumber,jdbcType=CHAR}, 
      #{betCount,jdbcType=INTEGER}, #{betAmount,jdbcType=DECIMAL}, #{winAmount,jdbcType=DECIMAL}, 
      #{backAmount,jdbcType=DECIMAL}, #{godOrderId,jdbcType=INTEGER}, #{tbStatus,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.mapper.domain.OrderBetRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_bet_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="lotteryId != null">
        lottery_id,
      </if>
      <if test="playId != null">
        play_id,
      </if>
      <if test="settingId != null">
        setting_id,
      </if>
      <if test="betNumber != null">
        bet_number,
      </if>
      <if test="betCount != null">
        bet_count,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="winAmount != null">
        win_amount,
      </if>
      <if test="backAmount != null">
        back_amount,
      </if>
      <if test="godOrderId != null">
        god_order_id,
      </if>
      <if test="tbStatus != null">
        tb_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="lotteryId != null">
        #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="playId != null">
        #{playId,jdbcType=INTEGER},
      </if>
      <if test="settingId != null">
        #{settingId,jdbcType=INTEGER},
      </if>
      <if test="betNumber != null">
        #{betNumber,jdbcType=CHAR},
      </if>
      <if test="betCount != null">
        #{betCount,jdbcType=INTEGER},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="winAmount != null">
        #{winAmount,jdbcType=DECIMAL},
      </if>
      <if test="backAmount != null">
        #{backAmount,jdbcType=DECIMAL},
      </if>
      <if test="godOrderId != null">
        #{godOrderId,jdbcType=INTEGER},
      </if>
      <if test="tbStatus != null">
        #{tbStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mapper.domain.OrderBetRecordExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from order_bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_bet_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryId != null">
        lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      </if>
      <if test="record.playId != null">
        play_id = #{record.playId,jdbcType=INTEGER},
      </if>
      <if test="record.settingId != null">
        setting_id = #{record.settingId,jdbcType=INTEGER},
      </if>
      <if test="record.betNumber != null">
        bet_number = #{record.betNumber,jdbcType=CHAR},
      </if>
      <if test="record.betCount != null">
        bet_count = #{record.betCount,jdbcType=INTEGER},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.winAmount != null">
        win_amount = #{record.winAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.backAmount != null">
        back_amount = #{record.backAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.godOrderId != null">
        god_order_id = #{record.godOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.tbStatus != null">
        tb_status = #{record.tbStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_bet_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      play_id = #{record.playId,jdbcType=INTEGER},
      setting_id = #{record.settingId,jdbcType=INTEGER},
      bet_number = #{record.betNumber,jdbcType=CHAR},
      bet_count = #{record.betCount,jdbcType=INTEGER},
      bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      win_amount = #{record.winAmount,jdbcType=DECIMAL},
      back_amount = #{record.backAmount,jdbcType=DECIMAL},
      god_order_id = #{record.godOrderId,jdbcType=INTEGER},
      tb_status = #{record.tbStatus,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mapper.domain.OrderBetRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_bet_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="lotteryId != null">
        lottery_id = #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="playId != null">
        play_id = #{playId,jdbcType=INTEGER},
      </if>
      <if test="settingId != null">
        setting_id = #{settingId,jdbcType=INTEGER},
      </if>
      <if test="betNumber != null">
        bet_number = #{betNumber,jdbcType=CHAR},
      </if>
      <if test="betCount != null">
        bet_count = #{betCount,jdbcType=INTEGER},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="winAmount != null">
        win_amount = #{winAmount,jdbcType=DECIMAL},
      </if>
      <if test="backAmount != null">
        back_amount = #{backAmount,jdbcType=DECIMAL},
      </if>
      <if test="godOrderId != null">
        god_order_id = #{godOrderId,jdbcType=INTEGER},
      </if>
      <if test="tbStatus != null">
        tb_status = #{tbStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mapper.domain.OrderBetRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_bet_record
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      lottery_id = #{lotteryId,jdbcType=INTEGER},
      play_id = #{playId,jdbcType=INTEGER},
      setting_id = #{settingId,jdbcType=INTEGER},
      bet_number = #{betNumber,jdbcType=CHAR},
      bet_count = #{betCount,jdbcType=INTEGER},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      win_amount = #{winAmount,jdbcType=DECIMAL},
      back_amount = #{backAmount,jdbcType=DECIMAL},
      god_order_id = #{godOrderId,jdbcType=INTEGER},
      tb_status = #{tbStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.mapper.domain.OrderBetRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="selectdllist" parameterType="java.util.HashMap"    resultType="java.util.HashMap">

    select max(tt.dlzh) dlzh,max(tt.dlid) dlid,max(tt.dlcode) dlcode,max(tt.renshu) yjirenshu,max(tt.1jitz) yjitz,max(tt.1jiwin) yjiwin,max(tt.1jinowin) yjinowin,max(tt.1jcz) yjicz , max(tt.paccount) paccount,
    sum(pp.renshu) ejirenshu,IFNULL(sum(pp.1jitz),0) ejitz,sum(pp.1jiwin) ejiwin,sum(pp.1jinowin) ejinowin ,sum(pp.1jcz) ejicz
    from (SELECT
    MAX(sid) dlid,
    max(s.share_account) dlzh,
    MAX(pcode) dlcode,
    COUNT(s.id) renshu,
    sum(s.betAmount) 1jitz,
    sum(s.winAmount) 1jiwin,
    sum(s.nowinAmount) 1jinowin,
    sum(s.payAmount) 1jcz,
    max(s.xsaccount) paccount
    FROM
    (
    SELECT
    t.account,
    t.id,
    x.id AS sid,
    x.promotion_code as pcode,
    x.share_account AS xsaccount,
    t.share_account,
    t.pay_amount AS payAmount,
    IFNULL(SUM(o.bet_amount), 0) AS betAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'WIN' THEN
    o.win_amount - o.bet_amount
    END
    ),
    0
    ) AS winAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'NO_WIN' THEN
    o.bet_amount
    END
    ),
    0
    ) AS nowinAmount
    FROM
    app_member t
    LEFT JOIN order_bet_record o ON t.id = o.user_id
    JOIN app_member x ON t.share_account = x.account
    WHERE
    o.is_delete = 0
    AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')
    <if test="params.startdate!=null and params.startdate !=''">
      and o.update_time &gt;=   '${params.startdate}'
    </if>
    <if test="params.enddate!=null and params.enddate !=''">
      and o.update_time &lt;  '${params.enddate}'
    </if>
    GROUP BY
    t.id
    ) s

    GROUP BY
    s.share_account ) tt left join (SELECT
    MAX(sid) dlid,
    MAX(pcode) dlcode,
    max(s.share_account) dlzh,
    COUNT(s.id) renshu,
    sum(s.betAmount) 1jitz,
    sum(s.winAmount) 1jiwin,
    sum(s.nowinAmount) 1jinowin,
    sum(s.payAmount) 1jcz,
    max(s.xsaccount) paccount
    FROM
    (
    SELECT
    t.account,
    t.id,
    x.id AS sid,
    x.promotion_code as pcode,
    x.share_account AS xsaccount,
    t.share_account,
    t.pay_amount AS payAmount,
    IFNULL(SUM(o.bet_amount), 0) AS betAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'WIN' THEN
    o.win_amount - o.bet_amount
    END
    ),
    0
    ) AS winAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'NO_WIN' THEN
    o.bet_amount
    END
    ),
    0
    ) AS nowinAmount
    FROM
    app_member t
    LEFT JOIN order_bet_record o ON t.id = o.user_id
    JOIN app_member x ON t.share_account = x.account
    WHERE
    o.is_delete = 0
    AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')

    <if test="params.startdate!=null and params.startdate !=''">
      and o.update_time &gt;=   '${params.startdate}'
    </if>
    <if test="params.enddate!=null and params.enddate !=''">
      and o.update_time &lt;  '${params.enddate}'
    </if>

    GROUP BY
    t.id
    ) s

    GROUP BY
    s.share_account ) pp on tt.dlzh= pp.paccount
    where 1=1
    <if test="params.account!=null and params.account !=''">
      and tt.dlzh like  '%${params.account}%'
    </if>
    <if test="params.id!=null and params.id !=''">
      and tt.dlid = '${params.id}'
    </if>

    GROUP BY tt.dlid

    <if test="params.orderBy != null">
      order by ${params.orderBy} desc
    </if>
    <if test="params.limit != null and params.limit&gt;=0 and params.offset != null">
      limit #{params.offset} , #{params.limit}
    </if>
  </select>

  <select id="countdl"  parameterType="java.util.HashMap"    resultType="java.lang.Integer">
    SELECT COUNT(count1) FROM  ( SELECT COUNT(t1.dlid) as count1
    from (SELECT
    MAX(sid) dlid,
    max(s.share_account) dlzh,
    MAX(pcode) dlcode,
    COUNT(s.id) renshu,
    sum(s.betAmount) 1jitz,
    sum(s.winAmount) 1jiwin,
    sum(s.nowinAmount) 1jinowin,
    sum(s.payAmount) 1jcz,
    max(s.xsaccount) paccount
    FROM
    (
    SELECT
    t.account,
    t.id,
    x.id AS sid,
    x.promotion_code as pcode,
    x.share_account AS xsaccount,
    t.share_account,
    t.pay_amount AS payAmount,
    IFNULL(SUM(o.bet_amount), 0) AS betAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'WIN' THEN
    o.win_amount - o.bet_amount
    END
    ),
    0
    ) AS winAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'NO_WIN' THEN
    o.bet_amount
    END
    ),
    0
    ) AS nowinAmount
    FROM
    app_member t
    LEFT JOIN order_bet_record o ON t.id = o.user_id
    JOIN app_member x ON t.share_account = x.account
    WHERE
    o.is_delete = 0
    AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')
    <if test="params.startdate!=null and params.startdate !=''">
      and o.update_time &gt;=   '${params.startdate}'
    </if>
    <if test="params.enddate!=null and params.enddate !=''">
      and o.update_time &lt;  '${params.enddate}'
    </if>
    GROUP BY
    t.id
    ) s

    GROUP BY
    s.share_account ) t1 left join (SELECT
    MAX(sid) dlid,
    MAX(pcode) dlcode,
    max(s.share_account) dlzh,
    COUNT(s.id) renshu,
    sum(s.betAmount) 1jitz,
    sum(s.winAmount) 1jiwin,
    sum(s.nowinAmount) 1jinowin,
    sum(s.payAmount) 1jcz,
    max(s.xsaccount) paccount
    FROM
    (
    SELECT
    t.account,
    t.id,
    x.id AS sid,
    x.promotion_code as pcode,
    x.share_account AS xsaccount,
    t.share_account,
    t.pay_amount AS payAmount,
    IFNULL(SUM(o.bet_amount), 0) AS betAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'WIN' THEN
    o.win_amount - o.bet_amount
    END
    ),
    0
    ) AS winAmount,
    IFNULL(
    SUM(
    CASE
    WHEN o.tb_status = 'NO_WIN' THEN
    o.bet_amount
    END
    ),
    0
    ) AS nowinAmount
    FROM
    app_member t
    LEFT JOIN order_bet_record o ON t.id = o.user_id
    JOIN app_member x ON t.share_account = x.account
    WHERE
    o.is_delete = 0
    AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')

    <if test="params.startdate!=null and params.startdate !=''">
      and o.update_time &gt;=   '${params.startdate}'
    </if>
    <if test="params.enddate!=null and params.enddate !=''">
      and o.update_time &lt;  '${params.enddate}'
    </if>

    GROUP BY
    t.id
    ) s

    GROUP BY
    s.share_account ) t2 on t1.dlzh= t2.paccount
    where 1=1
    <if test="params.account!=null and params.account !=''">
      and t1.dlzh like  '%${params.account}%'
    </if>
    <if test="params.id!=null and params.id !=''">
      and t1.dlid = '${params.id}'
    </if>

    GROUP BY t1.dlid) p3
   </select>


  <select id="selectdltree"  parameterType="java.util.HashMap"    resultType="java.util.HashMap">
  SELECT
  t.account,
  t.id,
  t.promotion_code,
  x.share_account ejif ,
  t.share_account yjif,
  t.pay_amount AS payAmount,
    IFNULL(SUM(CASE
    WHEN o.tb_status IN ('WIN', 'NO_WIN', 'HE') THEN
    o.bet_amount
    END), 0) AS betAmount,
  IFNULL(
  SUM(
  CASE
  WHEN o.tb_status = 'WIN' THEN
  o.win_amount - o.bet_amount
  END
  ),
  0
  ) AS winAmount,
  IFNULL(
  SUM(
  CASE
  WHEN o.tb_status = 'NO_WIN' THEN
  o.bet_amount
  END
  ),
  0
  ) AS nowinAmount
  FROM
  app_member t  join app_member x on t.share_account= x.account
  LEFT JOIN order_bet_record o ON t.id = o.user_id where 1=1

    <if test="params.account!=null and params.account !=''">
     and t.share_account = '${params.account}' or x.share_account= '${params.account}'
    </if>

    GROUP BY t.id
    ORDER BY ejif asc,yjif
</select>
</mapper>