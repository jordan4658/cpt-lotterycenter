package com.mapper.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class FiveluckpksCountSgdxExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public FiveluckpksCountSgdxExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public FiveluckpksCountSgdxExample bound(Integer offset, Integer limit) {
        this.offset = offset;
        this.limit = limit;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("`date` is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("`date` is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(String value) {
            addCriterion("`date` =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(String value) {
            addCriterion("`date` <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(String value) {
            addCriterion("`date` >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(String value) {
            addCriterion("`date` >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(String value) {
            addCriterion("`date` <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(String value) {
            addCriterion("`date` <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLike(String value) {
            addCriterion("`date` like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotLike(String value) {
            addCriterion("`date` not like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<String> values) {
            addCriterion("`date` in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<String> values) {
            addCriterion("`date` not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(String value1, String value2) {
            addCriterion("`date` between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(String value1, String value2) {
            addCriterion("`date` not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andOnedIsNull() {
            addCriterion("oned is null");
            return (Criteria) this;
        }

        public Criteria andOnedIsNotNull() {
            addCriterion("oned is not null");
            return (Criteria) this;
        }

        public Criteria andOnedEqualTo(Integer value) {
            addCriterion("oned =", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotEqualTo(Integer value) {
            addCriterion("oned <>", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedGreaterThan(Integer value) {
            addCriterion("oned >", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedGreaterThanOrEqualTo(Integer value) {
            addCriterion("oned >=", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedLessThan(Integer value) {
            addCriterion("oned <", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedLessThanOrEqualTo(Integer value) {
            addCriterion("oned <=", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedIn(List<Integer> values) {
            addCriterion("oned in", values, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotIn(List<Integer> values) {
            addCriterion("oned not in", values, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedBetween(Integer value1, Integer value2) {
            addCriterion("oned between", value1, value2, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotBetween(Integer value1, Integer value2) {
            addCriterion("oned not between", value1, value2, "oned");
            return (Criteria) this;
        }

        public Criteria andOnexIsNull() {
            addCriterion("onex is null");
            return (Criteria) this;
        }

        public Criteria andOnexIsNotNull() {
            addCriterion("onex is not null");
            return (Criteria) this;
        }

        public Criteria andOnexEqualTo(Integer value) {
            addCriterion("onex =", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexNotEqualTo(Integer value) {
            addCriterion("onex <>", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexGreaterThan(Integer value) {
            addCriterion("onex >", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexGreaterThanOrEqualTo(Integer value) {
            addCriterion("onex >=", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexLessThan(Integer value) {
            addCriterion("onex <", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexLessThanOrEqualTo(Integer value) {
            addCriterion("onex <=", value, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexIn(List<Integer> values) {
            addCriterion("onex in", values, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexNotIn(List<Integer> values) {
            addCriterion("onex not in", values, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexBetween(Integer value1, Integer value2) {
            addCriterion("onex between", value1, value2, "onex");
            return (Criteria) this;
        }

        public Criteria andOnexNotBetween(Integer value1, Integer value2) {
            addCriterion("onex not between", value1, value2, "onex");
            return (Criteria) this;
        }

        public Criteria andTwodIsNull() {
            addCriterion("twod is null");
            return (Criteria) this;
        }

        public Criteria andTwodIsNotNull() {
            addCriterion("twod is not null");
            return (Criteria) this;
        }

        public Criteria andTwodEqualTo(Integer value) {
            addCriterion("twod =", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotEqualTo(Integer value) {
            addCriterion("twod <>", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodGreaterThan(Integer value) {
            addCriterion("twod >", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodGreaterThanOrEqualTo(Integer value) {
            addCriterion("twod >=", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodLessThan(Integer value) {
            addCriterion("twod <", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodLessThanOrEqualTo(Integer value) {
            addCriterion("twod <=", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodIn(List<Integer> values) {
            addCriterion("twod in", values, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotIn(List<Integer> values) {
            addCriterion("twod not in", values, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodBetween(Integer value1, Integer value2) {
            addCriterion("twod between", value1, value2, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotBetween(Integer value1, Integer value2) {
            addCriterion("twod not between", value1, value2, "twod");
            return (Criteria) this;
        }

        public Criteria andTwoxIsNull() {
            addCriterion("twox is null");
            return (Criteria) this;
        }

        public Criteria andTwoxIsNotNull() {
            addCriterion("twox is not null");
            return (Criteria) this;
        }

        public Criteria andTwoxEqualTo(Integer value) {
            addCriterion("twox =", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxNotEqualTo(Integer value) {
            addCriterion("twox <>", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxGreaterThan(Integer value) {
            addCriterion("twox >", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxGreaterThanOrEqualTo(Integer value) {
            addCriterion("twox >=", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxLessThan(Integer value) {
            addCriterion("twox <", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxLessThanOrEqualTo(Integer value) {
            addCriterion("twox <=", value, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxIn(List<Integer> values) {
            addCriterion("twox in", values, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxNotIn(List<Integer> values) {
            addCriterion("twox not in", values, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxBetween(Integer value1, Integer value2) {
            addCriterion("twox between", value1, value2, "twox");
            return (Criteria) this;
        }

        public Criteria andTwoxNotBetween(Integer value1, Integer value2) {
            addCriterion("twox not between", value1, value2, "twox");
            return (Criteria) this;
        }

        public Criteria andThreedIsNull() {
            addCriterion("threed is null");
            return (Criteria) this;
        }

        public Criteria andThreedIsNotNull() {
            addCriterion("threed is not null");
            return (Criteria) this;
        }

        public Criteria andThreedEqualTo(Integer value) {
            addCriterion("threed =", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotEqualTo(Integer value) {
            addCriterion("threed <>", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedGreaterThan(Integer value) {
            addCriterion("threed >", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedGreaterThanOrEqualTo(Integer value) {
            addCriterion("threed >=", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedLessThan(Integer value) {
            addCriterion("threed <", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedLessThanOrEqualTo(Integer value) {
            addCriterion("threed <=", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedIn(List<Integer> values) {
            addCriterion("threed in", values, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotIn(List<Integer> values) {
            addCriterion("threed not in", values, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedBetween(Integer value1, Integer value2) {
            addCriterion("threed between", value1, value2, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotBetween(Integer value1, Integer value2) {
            addCriterion("threed not between", value1, value2, "threed");
            return (Criteria) this;
        }

        public Criteria andThreexIsNull() {
            addCriterion("threex is null");
            return (Criteria) this;
        }

        public Criteria andThreexIsNotNull() {
            addCriterion("threex is not null");
            return (Criteria) this;
        }

        public Criteria andThreexEqualTo(Integer value) {
            addCriterion("threex =", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexNotEqualTo(Integer value) {
            addCriterion("threex <>", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexGreaterThan(Integer value) {
            addCriterion("threex >", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexGreaterThanOrEqualTo(Integer value) {
            addCriterion("threex >=", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexLessThan(Integer value) {
            addCriterion("threex <", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexLessThanOrEqualTo(Integer value) {
            addCriterion("threex <=", value, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexIn(List<Integer> values) {
            addCriterion("threex in", values, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexNotIn(List<Integer> values) {
            addCriterion("threex not in", values, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexBetween(Integer value1, Integer value2) {
            addCriterion("threex between", value1, value2, "threex");
            return (Criteria) this;
        }

        public Criteria andThreexNotBetween(Integer value1, Integer value2) {
            addCriterion("threex not between", value1, value2, "threex");
            return (Criteria) this;
        }

        public Criteria andFourdIsNull() {
            addCriterion("fourd is null");
            return (Criteria) this;
        }

        public Criteria andFourdIsNotNull() {
            addCriterion("fourd is not null");
            return (Criteria) this;
        }

        public Criteria andFourdEqualTo(Integer value) {
            addCriterion("fourd =", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotEqualTo(Integer value) {
            addCriterion("fourd <>", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdGreaterThan(Integer value) {
            addCriterion("fourd >", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdGreaterThanOrEqualTo(Integer value) {
            addCriterion("fourd >=", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdLessThan(Integer value) {
            addCriterion("fourd <", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdLessThanOrEqualTo(Integer value) {
            addCriterion("fourd <=", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdIn(List<Integer> values) {
            addCriterion("fourd in", values, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotIn(List<Integer> values) {
            addCriterion("fourd not in", values, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdBetween(Integer value1, Integer value2) {
            addCriterion("fourd between", value1, value2, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotBetween(Integer value1, Integer value2) {
            addCriterion("fourd not between", value1, value2, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourxIsNull() {
            addCriterion("fourx is null");
            return (Criteria) this;
        }

        public Criteria andFourxIsNotNull() {
            addCriterion("fourx is not null");
            return (Criteria) this;
        }

        public Criteria andFourxEqualTo(Integer value) {
            addCriterion("fourx =", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxNotEqualTo(Integer value) {
            addCriterion("fourx <>", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxGreaterThan(Integer value) {
            addCriterion("fourx >", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxGreaterThanOrEqualTo(Integer value) {
            addCriterion("fourx >=", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxLessThan(Integer value) {
            addCriterion("fourx <", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxLessThanOrEqualTo(Integer value) {
            addCriterion("fourx <=", value, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxIn(List<Integer> values) {
            addCriterion("fourx in", values, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxNotIn(List<Integer> values) {
            addCriterion("fourx not in", values, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxBetween(Integer value1, Integer value2) {
            addCriterion("fourx between", value1, value2, "fourx");
            return (Criteria) this;
        }

        public Criteria andFourxNotBetween(Integer value1, Integer value2) {
            addCriterion("fourx not between", value1, value2, "fourx");
            return (Criteria) this;
        }

        public Criteria andFivedIsNull() {
            addCriterion("fived is null");
            return (Criteria) this;
        }

        public Criteria andFivedIsNotNull() {
            addCriterion("fived is not null");
            return (Criteria) this;
        }

        public Criteria andFivedEqualTo(Integer value) {
            addCriterion("fived =", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotEqualTo(Integer value) {
            addCriterion("fived <>", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedGreaterThan(Integer value) {
            addCriterion("fived >", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedGreaterThanOrEqualTo(Integer value) {
            addCriterion("fived >=", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedLessThan(Integer value) {
            addCriterion("fived <", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedLessThanOrEqualTo(Integer value) {
            addCriterion("fived <=", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedIn(List<Integer> values) {
            addCriterion("fived in", values, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotIn(List<Integer> values) {
            addCriterion("fived not in", values, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedBetween(Integer value1, Integer value2) {
            addCriterion("fived between", value1, value2, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotBetween(Integer value1, Integer value2) {
            addCriterion("fived not between", value1, value2, "fived");
            return (Criteria) this;
        }

        public Criteria andFivexIsNull() {
            addCriterion("fivex is null");
            return (Criteria) this;
        }

        public Criteria andFivexIsNotNull() {
            addCriterion("fivex is not null");
            return (Criteria) this;
        }

        public Criteria andFivexEqualTo(Integer value) {
            addCriterion("fivex =", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexNotEqualTo(Integer value) {
            addCriterion("fivex <>", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexGreaterThan(Integer value) {
            addCriterion("fivex >", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexGreaterThanOrEqualTo(Integer value) {
            addCriterion("fivex >=", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexLessThan(Integer value) {
            addCriterion("fivex <", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexLessThanOrEqualTo(Integer value) {
            addCriterion("fivex <=", value, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexIn(List<Integer> values) {
            addCriterion("fivex in", values, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexNotIn(List<Integer> values) {
            addCriterion("fivex not in", values, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexBetween(Integer value1, Integer value2) {
            addCriterion("fivex between", value1, value2, "fivex");
            return (Criteria) this;
        }

        public Criteria andFivexNotBetween(Integer value1, Integer value2) {
            addCriterion("fivex not between", value1, value2, "fivex");
            return (Criteria) this;
        }

        public Criteria andSixdIsNull() {
            addCriterion("sixd is null");
            return (Criteria) this;
        }

        public Criteria andSixdIsNotNull() {
            addCriterion("sixd is not null");
            return (Criteria) this;
        }

        public Criteria andSixdEqualTo(Integer value) {
            addCriterion("sixd =", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotEqualTo(Integer value) {
            addCriterion("sixd <>", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdGreaterThan(Integer value) {
            addCriterion("sixd >", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sixd >=", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdLessThan(Integer value) {
            addCriterion("sixd <", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdLessThanOrEqualTo(Integer value) {
            addCriterion("sixd <=", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdIn(List<Integer> values) {
            addCriterion("sixd in", values, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotIn(List<Integer> values) {
            addCriterion("sixd not in", values, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdBetween(Integer value1, Integer value2) {
            addCriterion("sixd between", value1, value2, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotBetween(Integer value1, Integer value2) {
            addCriterion("sixd not between", value1, value2, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixxIsNull() {
            addCriterion("sixx is null");
            return (Criteria) this;
        }

        public Criteria andSixxIsNotNull() {
            addCriterion("sixx is not null");
            return (Criteria) this;
        }

        public Criteria andSixxEqualTo(Integer value) {
            addCriterion("sixx =", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxNotEqualTo(Integer value) {
            addCriterion("sixx <>", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxGreaterThan(Integer value) {
            addCriterion("sixx >", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxGreaterThanOrEqualTo(Integer value) {
            addCriterion("sixx >=", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxLessThan(Integer value) {
            addCriterion("sixx <", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxLessThanOrEqualTo(Integer value) {
            addCriterion("sixx <=", value, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxIn(List<Integer> values) {
            addCriterion("sixx in", values, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxNotIn(List<Integer> values) {
            addCriterion("sixx not in", values, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxBetween(Integer value1, Integer value2) {
            addCriterion("sixx between", value1, value2, "sixx");
            return (Criteria) this;
        }

        public Criteria andSixxNotBetween(Integer value1, Integer value2) {
            addCriterion("sixx not between", value1, value2, "sixx");
            return (Criteria) this;
        }

        public Criteria andSevendIsNull() {
            addCriterion("sevend is null");
            return (Criteria) this;
        }

        public Criteria andSevendIsNotNull() {
            addCriterion("sevend is not null");
            return (Criteria) this;
        }

        public Criteria andSevendEqualTo(Integer value) {
            addCriterion("sevend =", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotEqualTo(Integer value) {
            addCriterion("sevend <>", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendGreaterThan(Integer value) {
            addCriterion("sevend >", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendGreaterThanOrEqualTo(Integer value) {
            addCriterion("sevend >=", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendLessThan(Integer value) {
            addCriterion("sevend <", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendLessThanOrEqualTo(Integer value) {
            addCriterion("sevend <=", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendIn(List<Integer> values) {
            addCriterion("sevend in", values, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotIn(List<Integer> values) {
            addCriterion("sevend not in", values, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendBetween(Integer value1, Integer value2) {
            addCriterion("sevend between", value1, value2, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotBetween(Integer value1, Integer value2) {
            addCriterion("sevend not between", value1, value2, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevenxIsNull() {
            addCriterion("sevenx is null");
            return (Criteria) this;
        }

        public Criteria andSevenxIsNotNull() {
            addCriterion("sevenx is not null");
            return (Criteria) this;
        }

        public Criteria andSevenxEqualTo(Integer value) {
            addCriterion("sevenx =", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxNotEqualTo(Integer value) {
            addCriterion("sevenx <>", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxGreaterThan(Integer value) {
            addCriterion("sevenx >", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxGreaterThanOrEqualTo(Integer value) {
            addCriterion("sevenx >=", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxLessThan(Integer value) {
            addCriterion("sevenx <", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxLessThanOrEqualTo(Integer value) {
            addCriterion("sevenx <=", value, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxIn(List<Integer> values) {
            addCriterion("sevenx in", values, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxNotIn(List<Integer> values) {
            addCriterion("sevenx not in", values, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxBetween(Integer value1, Integer value2) {
            addCriterion("sevenx between", value1, value2, "sevenx");
            return (Criteria) this;
        }

        public Criteria andSevenxNotBetween(Integer value1, Integer value2) {
            addCriterion("sevenx not between", value1, value2, "sevenx");
            return (Criteria) this;
        }

        public Criteria andEightdIsNull() {
            addCriterion("eightd is null");
            return (Criteria) this;
        }

        public Criteria andEightdIsNotNull() {
            addCriterion("eightd is not null");
            return (Criteria) this;
        }

        public Criteria andEightdEqualTo(Integer value) {
            addCriterion("eightd =", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotEqualTo(Integer value) {
            addCriterion("eightd <>", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdGreaterThan(Integer value) {
            addCriterion("eightd >", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdGreaterThanOrEqualTo(Integer value) {
            addCriterion("eightd >=", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdLessThan(Integer value) {
            addCriterion("eightd <", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdLessThanOrEqualTo(Integer value) {
            addCriterion("eightd <=", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdIn(List<Integer> values) {
            addCriterion("eightd in", values, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotIn(List<Integer> values) {
            addCriterion("eightd not in", values, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdBetween(Integer value1, Integer value2) {
            addCriterion("eightd between", value1, value2, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotBetween(Integer value1, Integer value2) {
            addCriterion("eightd not between", value1, value2, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightxIsNull() {
            addCriterion("eightx is null");
            return (Criteria) this;
        }

        public Criteria andEightxIsNotNull() {
            addCriterion("eightx is not null");
            return (Criteria) this;
        }

        public Criteria andEightxEqualTo(Integer value) {
            addCriterion("eightx =", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxNotEqualTo(Integer value) {
            addCriterion("eightx <>", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxGreaterThan(Integer value) {
            addCriterion("eightx >", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxGreaterThanOrEqualTo(Integer value) {
            addCriterion("eightx >=", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxLessThan(Integer value) {
            addCriterion("eightx <", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxLessThanOrEqualTo(Integer value) {
            addCriterion("eightx <=", value, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxIn(List<Integer> values) {
            addCriterion("eightx in", values, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxNotIn(List<Integer> values) {
            addCriterion("eightx not in", values, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxBetween(Integer value1, Integer value2) {
            addCriterion("eightx between", value1, value2, "eightx");
            return (Criteria) this;
        }

        public Criteria andEightxNotBetween(Integer value1, Integer value2) {
            addCriterion("eightx not between", value1, value2, "eightx");
            return (Criteria) this;
        }

        public Criteria andNightdIsNull() {
            addCriterion("nightd is null");
            return (Criteria) this;
        }

        public Criteria andNightdIsNotNull() {
            addCriterion("nightd is not null");
            return (Criteria) this;
        }

        public Criteria andNightdEqualTo(Integer value) {
            addCriterion("nightd =", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotEqualTo(Integer value) {
            addCriterion("nightd <>", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdGreaterThan(Integer value) {
            addCriterion("nightd >", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdGreaterThanOrEqualTo(Integer value) {
            addCriterion("nightd >=", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdLessThan(Integer value) {
            addCriterion("nightd <", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdLessThanOrEqualTo(Integer value) {
            addCriterion("nightd <=", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdIn(List<Integer> values) {
            addCriterion("nightd in", values, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotIn(List<Integer> values) {
            addCriterion("nightd not in", values, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdBetween(Integer value1, Integer value2) {
            addCriterion("nightd between", value1, value2, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotBetween(Integer value1, Integer value2) {
            addCriterion("nightd not between", value1, value2, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightxIsNull() {
            addCriterion("nightx is null");
            return (Criteria) this;
        }

        public Criteria andNightxIsNotNull() {
            addCriterion("nightx is not null");
            return (Criteria) this;
        }

        public Criteria andNightxEqualTo(Integer value) {
            addCriterion("nightx =", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxNotEqualTo(Integer value) {
            addCriterion("nightx <>", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxGreaterThan(Integer value) {
            addCriterion("nightx >", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxGreaterThanOrEqualTo(Integer value) {
            addCriterion("nightx >=", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxLessThan(Integer value) {
            addCriterion("nightx <", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxLessThanOrEqualTo(Integer value) {
            addCriterion("nightx <=", value, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxIn(List<Integer> values) {
            addCriterion("nightx in", values, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxNotIn(List<Integer> values) {
            addCriterion("nightx not in", values, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxBetween(Integer value1, Integer value2) {
            addCriterion("nightx between", value1, value2, "nightx");
            return (Criteria) this;
        }

        public Criteria andNightxNotBetween(Integer value1, Integer value2) {
            addCriterion("nightx not between", value1, value2, "nightx");
            return (Criteria) this;
        }

        public Criteria andTendIsNull() {
            addCriterion("tend is null");
            return (Criteria) this;
        }

        public Criteria andTendIsNotNull() {
            addCriterion("tend is not null");
            return (Criteria) this;
        }

        public Criteria andTendEqualTo(Integer value) {
            addCriterion("tend =", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotEqualTo(Integer value) {
            addCriterion("tend <>", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendGreaterThan(Integer value) {
            addCriterion("tend >", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendGreaterThanOrEqualTo(Integer value) {
            addCriterion("tend >=", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendLessThan(Integer value) {
            addCriterion("tend <", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendLessThanOrEqualTo(Integer value) {
            addCriterion("tend <=", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendIn(List<Integer> values) {
            addCriterion("tend in", values, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotIn(List<Integer> values) {
            addCriterion("tend not in", values, "tend");
            return (Criteria) this;
        }

        public Criteria andTendBetween(Integer value1, Integer value2) {
            addCriterion("tend between", value1, value2, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotBetween(Integer value1, Integer value2) {
            addCriterion("tend not between", value1, value2, "tend");
            return (Criteria) this;
        }

        public Criteria andTenxIsNull() {
            addCriterion("tenx is null");
            return (Criteria) this;
        }

        public Criteria andTenxIsNotNull() {
            addCriterion("tenx is not null");
            return (Criteria) this;
        }

        public Criteria andTenxEqualTo(Integer value) {
            addCriterion("tenx =", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxNotEqualTo(Integer value) {
            addCriterion("tenx <>", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxGreaterThan(Integer value) {
            addCriterion("tenx >", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxGreaterThanOrEqualTo(Integer value) {
            addCriterion("tenx >=", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxLessThan(Integer value) {
            addCriterion("tenx <", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxLessThanOrEqualTo(Integer value) {
            addCriterion("tenx <=", value, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxIn(List<Integer> values) {
            addCriterion("tenx in", values, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxNotIn(List<Integer> values) {
            addCriterion("tenx not in", values, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxBetween(Integer value1, Integer value2) {
            addCriterion("tenx between", value1, value2, "tenx");
            return (Criteria) this;
        }

        public Criteria andTenxNotBetween(Integer value1, Integer value2) {
            addCriterion("tenx not between", value1, value2, "tenx");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fiveluckpks_count_sgdx
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}