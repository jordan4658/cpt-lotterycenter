package com.mapper.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class CircleGodPushOrder implements Serializable {
    /**
     * 字段: circle_god_push_order.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: circle_god_push_order.god_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 大神id
     *
     * @mbggenerated
     */
    private Integer godId;

    /**
     * 字段: circle_god_push_order.member_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 用户id
     *
     * @mbggenerated
     */
    private Integer memberId;

    /**
     * 字段: circle_god_push_order.account<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 用户名
     *
     * @mbggenerated
     */
    private String account;

    /**
     * 字段: circle_god_push_order.order_bet_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 注单id
     *
     * @mbggenerated
     */
    private Integer orderBetId;

    /**
     * 字段: circle_god_push_order.lottery_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 彩种id
     *
     * @mbggenerated
     */
    private Integer lotteryId;

    /**
     * 字段: circle_god_push_order.ensure_odds<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 保障赔率
     *
     * @mbggenerated
     */
    private BigDecimal ensureOdds;

    /**
     * 字段: circle_god_push_order.bonus_scale<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 分红比例
     *
     * @mbggenerated
     */
    private BigDecimal bonusScale;

    /**
     * 字段: circle_god_push_order.secret_status<br/>
     * 必填: false<br/>
     * 缺省: 2<br/>
     * 长度: 10<br/>
     * 说明: 保密设置：1跟单后公开2开奖后公开
     *
     * @mbggenerated
     */
    private Integer secretStatus;

    /**
     * 字段: circle_god_push_order.content<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 800<br/>
     * 说明: 推单内容
     *
     * @mbggenerated
     */
    private String content;

    /**
     * 字段: circle_god_push_order.god_analyze<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 800<br/>
     * 说明: 大神分析
     *
     * @mbggenerated
     */
    private String godAnalyze;

    /**
     * 字段: circle_god_push_order.finish_status<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 状态：1推单未开奖2已被中止3已开奖结算
     *
     * @mbggenerated
     */
    private Integer finishStatus;

    /**
     * 字段: circle_god_push_order.sort<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 排序(置顶用)
     *
     * @mbggenerated
     */
    private Integer sort;

    /**
     * 字段: circle_god_push_order.create_time<br/>
     * 必填: false<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    private String lotteryName;
    private Integer gdCount;//跟单人数

    public Integer getGdCount() {
        return gdCount;
    }

    public void setGdCount(Integer gdCount) {
        this.gdCount = gdCount;
    }

    public String getLotteryName() {
        return lotteryName;
    }

    public void setLotteryName(String lotteryName) {
        this.lotteryName = lotteryName;
    }

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circle_god_push_order
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return circle_god_push_order.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: circle_god_push_order.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return circle_god_push_order.god_id: 大神id
     *
     * @mbggenerated
     */
    public Integer getGodId() {
        return godId;
    }

    /**
     * 字段: circle_god_push_order.god_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 大神id
     *
     * @mbggenerated
     */
    public void setGodId(Integer godId) {
        this.godId = godId;
    }

    /**
     * @return circle_god_push_order.member_id: 用户id
     *
     * @mbggenerated
     */
    public Integer getMemberId() {
        return memberId;
    }

    /**
     * 字段: circle_god_push_order.member_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 用户id
     *
     * @mbggenerated
     */
    public void setMemberId(Integer memberId) {
        this.memberId = memberId;
    }

    /**
     * @return circle_god_push_order.account: 用户名
     *
     * @mbggenerated
     */
    public String getAccount() {
        return account;
    }

    /**
     * 字段: circle_god_push_order.account<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 用户名
     *
     * @mbggenerated
     */
    public void setAccount(String account) {
        this.account = account;
    }

    /**
     * @return circle_god_push_order.order_bet_id: 注单id
     *
     * @mbggenerated
     */
    public Integer getOrderBetId() {
        return orderBetId;
    }

    /**
     * 字段: circle_god_push_order.order_bet_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 注单id
     *
     * @mbggenerated
     */
    public void setOrderBetId(Integer orderBetId) {
        this.orderBetId = orderBetId;
    }

    /**
     * @return circle_god_push_order.lottery_id: 彩种id
     *
     * @mbggenerated
     */
    public Integer getLotteryId() {
        return lotteryId;
    }

    /**
     * 字段: circle_god_push_order.lottery_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 彩种id
     *
     * @mbggenerated
     */
    public void setLotteryId(Integer lotteryId) {
        this.lotteryId = lotteryId;
    }

    /**
     * @return circle_god_push_order.ensure_odds: 保障赔率
     *
     * @mbggenerated
     */
    public BigDecimal getEnsureOdds() {
        return ensureOdds;
    }

    /**
     * 字段: circle_god_push_order.ensure_odds<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 保障赔率
     *
     * @mbggenerated
     */
    public void setEnsureOdds(BigDecimal ensureOdds) {
        this.ensureOdds = ensureOdds;
    }

    /**
     * @return circle_god_push_order.bonus_scale: 分红比例
     *
     * @mbggenerated
     */
    public BigDecimal getBonusScale() {
        return bonusScale;
    }

    /**
     * 字段: circle_god_push_order.bonus_scale<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 分红比例
     *
     * @mbggenerated
     */
    public void setBonusScale(BigDecimal bonusScale) {
        this.bonusScale = bonusScale;
    }

    /**
     * @return circle_god_push_order.secret_status: 保密设置：1跟单后公开2开奖后公开
     *
     * @mbggenerated
     */
    public Integer getSecretStatus() {
        return secretStatus;
    }

    /**
     * 字段: circle_god_push_order.secret_status<br/>
     * 必填: false<br/>
     * 缺省: 2<br/>
     * 长度: 10<br/>
     * 说明: 保密设置：1跟单后公开2开奖后公开
     *
     * @mbggenerated
     */
    public void setSecretStatus(Integer secretStatus) {
        this.secretStatus = secretStatus;
    }

    /**
     * @return circle_god_push_order.content: 推单内容
     *
     * @mbggenerated
     */
    public String getContent() {
        return content;
    }

    /**
     * 字段: circle_god_push_order.content<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 800<br/>
     * 说明: 推单内容
     *
     * @mbggenerated
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * @return circle_god_push_order.god_analyze: 大神分析
     *
     * @mbggenerated
     */
    public String getGodAnalyze() {
        return godAnalyze;
    }

    /**
     * 字段: circle_god_push_order.god_analyze<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 800<br/>
     * 说明: 大神分析
     *
     * @mbggenerated
     */
    public void setGodAnalyze(String godAnalyze) {
        this.godAnalyze = godAnalyze;
    }

    /**
     * @return circle_god_push_order.finish_status: 状态：1推单未开奖2已被中止3已开奖结算
     *
     * @mbggenerated
     */
    public Integer getFinishStatus() {
        return finishStatus;
    }

    /**
     * 字段: circle_god_push_order.finish_status<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 状态：1推单未开奖2已被中止3已开奖结算
     *
     * @mbggenerated
     */
    public void setFinishStatus(Integer finishStatus) {
        this.finishStatus = finishStatus;
    }

    /**
     * @return circle_god_push_order.sort: 排序(置顶用)
     *
     * @mbggenerated
     */
    public Integer getSort() {
        return sort;
    }

    /**
     * 字段: circle_god_push_order.sort<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 排序(置顶用)
     *
     * @mbggenerated
     */
    public void setSort(Integer sort) {
        this.sort = sort;
    }

    /**
     * @return circle_god_push_order.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: circle_god_push_order.create_time<br/>
     * 必填: false<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circle_god_push_order
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        CircleGodPushOrder other = (CircleGodPushOrder) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getGodId() == null ? other.getGodId() == null : this.getGodId().equals(other.getGodId()))
            && (this.getMemberId() == null ? other.getMemberId() == null : this.getMemberId().equals(other.getMemberId()))
            && (this.getAccount() == null ? other.getAccount() == null : this.getAccount().equals(other.getAccount()))
            && (this.getOrderBetId() == null ? other.getOrderBetId() == null : this.getOrderBetId().equals(other.getOrderBetId()))
            && (this.getLotteryId() == null ? other.getLotteryId() == null : this.getLotteryId().equals(other.getLotteryId()))
            && (this.getEnsureOdds() == null ? other.getEnsureOdds() == null : this.getEnsureOdds().equals(other.getEnsureOdds()))
            && (this.getBonusScale() == null ? other.getBonusScale() == null : this.getBonusScale().equals(other.getBonusScale()))
            && (this.getSecretStatus() == null ? other.getSecretStatus() == null : this.getSecretStatus().equals(other.getSecretStatus()))
            && (this.getContent() == null ? other.getContent() == null : this.getContent().equals(other.getContent()))
            && (this.getGodAnalyze() == null ? other.getGodAnalyze() == null : this.getGodAnalyze().equals(other.getGodAnalyze()))
            && (this.getFinishStatus() == null ? other.getFinishStatus() == null : this.getFinishStatus().equals(other.getFinishStatus()))
            && (this.getSort() == null ? other.getSort() == null : this.getSort().equals(other.getSort()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circle_god_push_order
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getGodId() == null) ? 0 : getGodId().hashCode());
        result = prime * result + ((getMemberId() == null) ? 0 : getMemberId().hashCode());
        result = prime * result + ((getAccount() == null) ? 0 : getAccount().hashCode());
        result = prime * result + ((getOrderBetId() == null) ? 0 : getOrderBetId().hashCode());
        result = prime * result + ((getLotteryId() == null) ? 0 : getLotteryId().hashCode());
        result = prime * result + ((getEnsureOdds() == null) ? 0 : getEnsureOdds().hashCode());
        result = prime * result + ((getBonusScale() == null) ? 0 : getBonusScale().hashCode());
        result = prime * result + ((getSecretStatus() == null) ? 0 : getSecretStatus().hashCode());
        result = prime * result + ((getContent() == null) ? 0 : getContent().hashCode());
        result = prime * result + ((getGodAnalyze() == null) ? 0 : getGodAnalyze().hashCode());
        result = prime * result + ((getFinishStatus() == null) ? 0 : getFinishStatus().hashCode());
        result = prime * result + ((getSort() == null) ? 0 : getSort().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circle_god_push_order
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", godId=").append(godId);
        sb.append(", memberId=").append(memberId);
        sb.append(", account=").append(account);
        sb.append(", orderBetId=").append(orderBetId);
        sb.append(", lotteryId=").append(lotteryId);
        sb.append(", ensureOdds=").append(ensureOdds);
        sb.append(", bonusScale=").append(bonusScale);
        sb.append(", secretStatus=").append(secretStatus);
        sb.append(", content=").append(content);
        sb.append(", godAnalyze=").append(godAnalyze);
        sb.append(", finishStatus=").append(finishStatus);
        sb.append(", sort=").append(sort);
        sb.append(", createTime=").append(createTime);
        sb.append("]");
        return sb.toString();
    }
}