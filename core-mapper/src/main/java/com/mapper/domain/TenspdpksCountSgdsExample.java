package com.mapper.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class TenspdpksCountSgdsExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public TenspdpksCountSgdsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public TenspdpksCountSgdsExample bound(Integer offset, Integer limit) {
        this.offset = offset;
        this.limit = limit;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("`date` is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("`date` is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(String value) {
            addCriterion("`date` =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(String value) {
            addCriterion("`date` <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(String value) {
            addCriterion("`date` >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(String value) {
            addCriterion("`date` >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(String value) {
            addCriterion("`date` <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(String value) {
            addCriterion("`date` <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLike(String value) {
            addCriterion("`date` like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotLike(String value) {
            addCriterion("`date` not like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<String> values) {
            addCriterion("`date` in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<String> values) {
            addCriterion("`date` not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(String value1, String value2) {
            addCriterion("`date` between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(String value1, String value2) {
            addCriterion("`date` not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andOnedIsNull() {
            addCriterion("oned is null");
            return (Criteria) this;
        }

        public Criteria andOnedIsNotNull() {
            addCriterion("oned is not null");
            return (Criteria) this;
        }

        public Criteria andOnedEqualTo(Integer value) {
            addCriterion("oned =", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotEqualTo(Integer value) {
            addCriterion("oned <>", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedGreaterThan(Integer value) {
            addCriterion("oned >", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedGreaterThanOrEqualTo(Integer value) {
            addCriterion("oned >=", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedLessThan(Integer value) {
            addCriterion("oned <", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedLessThanOrEqualTo(Integer value) {
            addCriterion("oned <=", value, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedIn(List<Integer> values) {
            addCriterion("oned in", values, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotIn(List<Integer> values) {
            addCriterion("oned not in", values, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedBetween(Integer value1, Integer value2) {
            addCriterion("oned between", value1, value2, "oned");
            return (Criteria) this;
        }

        public Criteria andOnedNotBetween(Integer value1, Integer value2) {
            addCriterion("oned not between", value1, value2, "oned");
            return (Criteria) this;
        }

        public Criteria andOnesIsNull() {
            addCriterion("ones is null");
            return (Criteria) this;
        }

        public Criteria andOnesIsNotNull() {
            addCriterion("ones is not null");
            return (Criteria) this;
        }

        public Criteria andOnesEqualTo(Integer value) {
            addCriterion("ones =", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesNotEqualTo(Integer value) {
            addCriterion("ones <>", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesGreaterThan(Integer value) {
            addCriterion("ones >", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesGreaterThanOrEqualTo(Integer value) {
            addCriterion("ones >=", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesLessThan(Integer value) {
            addCriterion("ones <", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesLessThanOrEqualTo(Integer value) {
            addCriterion("ones <=", value, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesIn(List<Integer> values) {
            addCriterion("ones in", values, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesNotIn(List<Integer> values) {
            addCriterion("ones not in", values, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesBetween(Integer value1, Integer value2) {
            addCriterion("ones between", value1, value2, "ones");
            return (Criteria) this;
        }

        public Criteria andOnesNotBetween(Integer value1, Integer value2) {
            addCriterion("ones not between", value1, value2, "ones");
            return (Criteria) this;
        }

        public Criteria andTwodIsNull() {
            addCriterion("twod is null");
            return (Criteria) this;
        }

        public Criteria andTwodIsNotNull() {
            addCriterion("twod is not null");
            return (Criteria) this;
        }

        public Criteria andTwodEqualTo(Integer value) {
            addCriterion("twod =", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotEqualTo(Integer value) {
            addCriterion("twod <>", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodGreaterThan(Integer value) {
            addCriterion("twod >", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodGreaterThanOrEqualTo(Integer value) {
            addCriterion("twod >=", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodLessThan(Integer value) {
            addCriterion("twod <", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodLessThanOrEqualTo(Integer value) {
            addCriterion("twod <=", value, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodIn(List<Integer> values) {
            addCriterion("twod in", values, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotIn(List<Integer> values) {
            addCriterion("twod not in", values, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodBetween(Integer value1, Integer value2) {
            addCriterion("twod between", value1, value2, "twod");
            return (Criteria) this;
        }

        public Criteria andTwodNotBetween(Integer value1, Integer value2) {
            addCriterion("twod not between", value1, value2, "twod");
            return (Criteria) this;
        }

        public Criteria andTwosIsNull() {
            addCriterion("twos is null");
            return (Criteria) this;
        }

        public Criteria andTwosIsNotNull() {
            addCriterion("twos is not null");
            return (Criteria) this;
        }

        public Criteria andTwosEqualTo(Integer value) {
            addCriterion("twos =", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosNotEqualTo(Integer value) {
            addCriterion("twos <>", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosGreaterThan(Integer value) {
            addCriterion("twos >", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosGreaterThanOrEqualTo(Integer value) {
            addCriterion("twos >=", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosLessThan(Integer value) {
            addCriterion("twos <", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosLessThanOrEqualTo(Integer value) {
            addCriterion("twos <=", value, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosIn(List<Integer> values) {
            addCriterion("twos in", values, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosNotIn(List<Integer> values) {
            addCriterion("twos not in", values, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosBetween(Integer value1, Integer value2) {
            addCriterion("twos between", value1, value2, "twos");
            return (Criteria) this;
        }

        public Criteria andTwosNotBetween(Integer value1, Integer value2) {
            addCriterion("twos not between", value1, value2, "twos");
            return (Criteria) this;
        }

        public Criteria andThreedIsNull() {
            addCriterion("threed is null");
            return (Criteria) this;
        }

        public Criteria andThreedIsNotNull() {
            addCriterion("threed is not null");
            return (Criteria) this;
        }

        public Criteria andThreedEqualTo(Integer value) {
            addCriterion("threed =", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotEqualTo(Integer value) {
            addCriterion("threed <>", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedGreaterThan(Integer value) {
            addCriterion("threed >", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedGreaterThanOrEqualTo(Integer value) {
            addCriterion("threed >=", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedLessThan(Integer value) {
            addCriterion("threed <", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedLessThanOrEqualTo(Integer value) {
            addCriterion("threed <=", value, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedIn(List<Integer> values) {
            addCriterion("threed in", values, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotIn(List<Integer> values) {
            addCriterion("threed not in", values, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedBetween(Integer value1, Integer value2) {
            addCriterion("threed between", value1, value2, "threed");
            return (Criteria) this;
        }

        public Criteria andThreedNotBetween(Integer value1, Integer value2) {
            addCriterion("threed not between", value1, value2, "threed");
            return (Criteria) this;
        }

        public Criteria andThreesIsNull() {
            addCriterion("threes is null");
            return (Criteria) this;
        }

        public Criteria andThreesIsNotNull() {
            addCriterion("threes is not null");
            return (Criteria) this;
        }

        public Criteria andThreesEqualTo(Integer value) {
            addCriterion("threes =", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesNotEqualTo(Integer value) {
            addCriterion("threes <>", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesGreaterThan(Integer value) {
            addCriterion("threes >", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesGreaterThanOrEqualTo(Integer value) {
            addCriterion("threes >=", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesLessThan(Integer value) {
            addCriterion("threes <", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesLessThanOrEqualTo(Integer value) {
            addCriterion("threes <=", value, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesIn(List<Integer> values) {
            addCriterion("threes in", values, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesNotIn(List<Integer> values) {
            addCriterion("threes not in", values, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesBetween(Integer value1, Integer value2) {
            addCriterion("threes between", value1, value2, "threes");
            return (Criteria) this;
        }

        public Criteria andThreesNotBetween(Integer value1, Integer value2) {
            addCriterion("threes not between", value1, value2, "threes");
            return (Criteria) this;
        }

        public Criteria andFourdIsNull() {
            addCriterion("fourd is null");
            return (Criteria) this;
        }

        public Criteria andFourdIsNotNull() {
            addCriterion("fourd is not null");
            return (Criteria) this;
        }

        public Criteria andFourdEqualTo(Integer value) {
            addCriterion("fourd =", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotEqualTo(Integer value) {
            addCriterion("fourd <>", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdGreaterThan(Integer value) {
            addCriterion("fourd >", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdGreaterThanOrEqualTo(Integer value) {
            addCriterion("fourd >=", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdLessThan(Integer value) {
            addCriterion("fourd <", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdLessThanOrEqualTo(Integer value) {
            addCriterion("fourd <=", value, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdIn(List<Integer> values) {
            addCriterion("fourd in", values, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotIn(List<Integer> values) {
            addCriterion("fourd not in", values, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdBetween(Integer value1, Integer value2) {
            addCriterion("fourd between", value1, value2, "fourd");
            return (Criteria) this;
        }

        public Criteria andFourdNotBetween(Integer value1, Integer value2) {
            addCriterion("fourd not between", value1, value2, "fourd");
            return (Criteria) this;
        }

        public Criteria andFoursIsNull() {
            addCriterion("fours is null");
            return (Criteria) this;
        }

        public Criteria andFoursIsNotNull() {
            addCriterion("fours is not null");
            return (Criteria) this;
        }

        public Criteria andFoursEqualTo(Integer value) {
            addCriterion("fours =", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursNotEqualTo(Integer value) {
            addCriterion("fours <>", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursGreaterThan(Integer value) {
            addCriterion("fours >", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursGreaterThanOrEqualTo(Integer value) {
            addCriterion("fours >=", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursLessThan(Integer value) {
            addCriterion("fours <", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursLessThanOrEqualTo(Integer value) {
            addCriterion("fours <=", value, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursIn(List<Integer> values) {
            addCriterion("fours in", values, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursNotIn(List<Integer> values) {
            addCriterion("fours not in", values, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursBetween(Integer value1, Integer value2) {
            addCriterion("fours between", value1, value2, "fours");
            return (Criteria) this;
        }

        public Criteria andFoursNotBetween(Integer value1, Integer value2) {
            addCriterion("fours not between", value1, value2, "fours");
            return (Criteria) this;
        }

        public Criteria andFivedIsNull() {
            addCriterion("fived is null");
            return (Criteria) this;
        }

        public Criteria andFivedIsNotNull() {
            addCriterion("fived is not null");
            return (Criteria) this;
        }

        public Criteria andFivedEqualTo(Integer value) {
            addCriterion("fived =", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotEqualTo(Integer value) {
            addCriterion("fived <>", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedGreaterThan(Integer value) {
            addCriterion("fived >", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedGreaterThanOrEqualTo(Integer value) {
            addCriterion("fived >=", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedLessThan(Integer value) {
            addCriterion("fived <", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedLessThanOrEqualTo(Integer value) {
            addCriterion("fived <=", value, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedIn(List<Integer> values) {
            addCriterion("fived in", values, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotIn(List<Integer> values) {
            addCriterion("fived not in", values, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedBetween(Integer value1, Integer value2) {
            addCriterion("fived between", value1, value2, "fived");
            return (Criteria) this;
        }

        public Criteria andFivedNotBetween(Integer value1, Integer value2) {
            addCriterion("fived not between", value1, value2, "fived");
            return (Criteria) this;
        }

        public Criteria andFivesIsNull() {
            addCriterion("fives is null");
            return (Criteria) this;
        }

        public Criteria andFivesIsNotNull() {
            addCriterion("fives is not null");
            return (Criteria) this;
        }

        public Criteria andFivesEqualTo(Integer value) {
            addCriterion("fives =", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesNotEqualTo(Integer value) {
            addCriterion("fives <>", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesGreaterThan(Integer value) {
            addCriterion("fives >", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesGreaterThanOrEqualTo(Integer value) {
            addCriterion("fives >=", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesLessThan(Integer value) {
            addCriterion("fives <", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesLessThanOrEqualTo(Integer value) {
            addCriterion("fives <=", value, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesIn(List<Integer> values) {
            addCriterion("fives in", values, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesNotIn(List<Integer> values) {
            addCriterion("fives not in", values, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesBetween(Integer value1, Integer value2) {
            addCriterion("fives between", value1, value2, "fives");
            return (Criteria) this;
        }

        public Criteria andFivesNotBetween(Integer value1, Integer value2) {
            addCriterion("fives not between", value1, value2, "fives");
            return (Criteria) this;
        }

        public Criteria andSixdIsNull() {
            addCriterion("sixd is null");
            return (Criteria) this;
        }

        public Criteria andSixdIsNotNull() {
            addCriterion("sixd is not null");
            return (Criteria) this;
        }

        public Criteria andSixdEqualTo(Integer value) {
            addCriterion("sixd =", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotEqualTo(Integer value) {
            addCriterion("sixd <>", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdGreaterThan(Integer value) {
            addCriterion("sixd >", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sixd >=", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdLessThan(Integer value) {
            addCriterion("sixd <", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdLessThanOrEqualTo(Integer value) {
            addCriterion("sixd <=", value, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdIn(List<Integer> values) {
            addCriterion("sixd in", values, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotIn(List<Integer> values) {
            addCriterion("sixd not in", values, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdBetween(Integer value1, Integer value2) {
            addCriterion("sixd between", value1, value2, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixdNotBetween(Integer value1, Integer value2) {
            addCriterion("sixd not between", value1, value2, "sixd");
            return (Criteria) this;
        }

        public Criteria andSixsIsNull() {
            addCriterion("sixs is null");
            return (Criteria) this;
        }

        public Criteria andSixsIsNotNull() {
            addCriterion("sixs is not null");
            return (Criteria) this;
        }

        public Criteria andSixsEqualTo(Integer value) {
            addCriterion("sixs =", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsNotEqualTo(Integer value) {
            addCriterion("sixs <>", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsGreaterThan(Integer value) {
            addCriterion("sixs >", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsGreaterThanOrEqualTo(Integer value) {
            addCriterion("sixs >=", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsLessThan(Integer value) {
            addCriterion("sixs <", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsLessThanOrEqualTo(Integer value) {
            addCriterion("sixs <=", value, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsIn(List<Integer> values) {
            addCriterion("sixs in", values, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsNotIn(List<Integer> values) {
            addCriterion("sixs not in", values, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsBetween(Integer value1, Integer value2) {
            addCriterion("sixs between", value1, value2, "sixs");
            return (Criteria) this;
        }

        public Criteria andSixsNotBetween(Integer value1, Integer value2) {
            addCriterion("sixs not between", value1, value2, "sixs");
            return (Criteria) this;
        }

        public Criteria andSevendIsNull() {
            addCriterion("sevend is null");
            return (Criteria) this;
        }

        public Criteria andSevendIsNotNull() {
            addCriterion("sevend is not null");
            return (Criteria) this;
        }

        public Criteria andSevendEqualTo(Integer value) {
            addCriterion("sevend =", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotEqualTo(Integer value) {
            addCriterion("sevend <>", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendGreaterThan(Integer value) {
            addCriterion("sevend >", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendGreaterThanOrEqualTo(Integer value) {
            addCriterion("sevend >=", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendLessThan(Integer value) {
            addCriterion("sevend <", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendLessThanOrEqualTo(Integer value) {
            addCriterion("sevend <=", value, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendIn(List<Integer> values) {
            addCriterion("sevend in", values, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotIn(List<Integer> values) {
            addCriterion("sevend not in", values, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendBetween(Integer value1, Integer value2) {
            addCriterion("sevend between", value1, value2, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevendNotBetween(Integer value1, Integer value2) {
            addCriterion("sevend not between", value1, value2, "sevend");
            return (Criteria) this;
        }

        public Criteria andSevensIsNull() {
            addCriterion("sevens is null");
            return (Criteria) this;
        }

        public Criteria andSevensIsNotNull() {
            addCriterion("sevens is not null");
            return (Criteria) this;
        }

        public Criteria andSevensEqualTo(Integer value) {
            addCriterion("sevens =", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensNotEqualTo(Integer value) {
            addCriterion("sevens <>", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensGreaterThan(Integer value) {
            addCriterion("sevens >", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensGreaterThanOrEqualTo(Integer value) {
            addCriterion("sevens >=", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensLessThan(Integer value) {
            addCriterion("sevens <", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensLessThanOrEqualTo(Integer value) {
            addCriterion("sevens <=", value, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensIn(List<Integer> values) {
            addCriterion("sevens in", values, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensNotIn(List<Integer> values) {
            addCriterion("sevens not in", values, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensBetween(Integer value1, Integer value2) {
            addCriterion("sevens between", value1, value2, "sevens");
            return (Criteria) this;
        }

        public Criteria andSevensNotBetween(Integer value1, Integer value2) {
            addCriterion("sevens not between", value1, value2, "sevens");
            return (Criteria) this;
        }

        public Criteria andEightdIsNull() {
            addCriterion("eightd is null");
            return (Criteria) this;
        }

        public Criteria andEightdIsNotNull() {
            addCriterion("eightd is not null");
            return (Criteria) this;
        }

        public Criteria andEightdEqualTo(Integer value) {
            addCriterion("eightd =", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotEqualTo(Integer value) {
            addCriterion("eightd <>", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdGreaterThan(Integer value) {
            addCriterion("eightd >", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdGreaterThanOrEqualTo(Integer value) {
            addCriterion("eightd >=", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdLessThan(Integer value) {
            addCriterion("eightd <", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdLessThanOrEqualTo(Integer value) {
            addCriterion("eightd <=", value, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdIn(List<Integer> values) {
            addCriterion("eightd in", values, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotIn(List<Integer> values) {
            addCriterion("eightd not in", values, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdBetween(Integer value1, Integer value2) {
            addCriterion("eightd between", value1, value2, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightdNotBetween(Integer value1, Integer value2) {
            addCriterion("eightd not between", value1, value2, "eightd");
            return (Criteria) this;
        }

        public Criteria andEightsIsNull() {
            addCriterion("eights is null");
            return (Criteria) this;
        }

        public Criteria andEightsIsNotNull() {
            addCriterion("eights is not null");
            return (Criteria) this;
        }

        public Criteria andEightsEqualTo(Integer value) {
            addCriterion("eights =", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsNotEqualTo(Integer value) {
            addCriterion("eights <>", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsGreaterThan(Integer value) {
            addCriterion("eights >", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsGreaterThanOrEqualTo(Integer value) {
            addCriterion("eights >=", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsLessThan(Integer value) {
            addCriterion("eights <", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsLessThanOrEqualTo(Integer value) {
            addCriterion("eights <=", value, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsIn(List<Integer> values) {
            addCriterion("eights in", values, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsNotIn(List<Integer> values) {
            addCriterion("eights not in", values, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsBetween(Integer value1, Integer value2) {
            addCriterion("eights between", value1, value2, "eights");
            return (Criteria) this;
        }

        public Criteria andEightsNotBetween(Integer value1, Integer value2) {
            addCriterion("eights not between", value1, value2, "eights");
            return (Criteria) this;
        }

        public Criteria andNightdIsNull() {
            addCriterion("nightd is null");
            return (Criteria) this;
        }

        public Criteria andNightdIsNotNull() {
            addCriterion("nightd is not null");
            return (Criteria) this;
        }

        public Criteria andNightdEqualTo(Integer value) {
            addCriterion("nightd =", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotEqualTo(Integer value) {
            addCriterion("nightd <>", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdGreaterThan(Integer value) {
            addCriterion("nightd >", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdGreaterThanOrEqualTo(Integer value) {
            addCriterion("nightd >=", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdLessThan(Integer value) {
            addCriterion("nightd <", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdLessThanOrEqualTo(Integer value) {
            addCriterion("nightd <=", value, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdIn(List<Integer> values) {
            addCriterion("nightd in", values, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotIn(List<Integer> values) {
            addCriterion("nightd not in", values, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdBetween(Integer value1, Integer value2) {
            addCriterion("nightd between", value1, value2, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightdNotBetween(Integer value1, Integer value2) {
            addCriterion("nightd not between", value1, value2, "nightd");
            return (Criteria) this;
        }

        public Criteria andNightsIsNull() {
            addCriterion("nights is null");
            return (Criteria) this;
        }

        public Criteria andNightsIsNotNull() {
            addCriterion("nights is not null");
            return (Criteria) this;
        }

        public Criteria andNightsEqualTo(Integer value) {
            addCriterion("nights =", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsNotEqualTo(Integer value) {
            addCriterion("nights <>", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsGreaterThan(Integer value) {
            addCriterion("nights >", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsGreaterThanOrEqualTo(Integer value) {
            addCriterion("nights >=", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsLessThan(Integer value) {
            addCriterion("nights <", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsLessThanOrEqualTo(Integer value) {
            addCriterion("nights <=", value, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsIn(List<Integer> values) {
            addCriterion("nights in", values, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsNotIn(List<Integer> values) {
            addCriterion("nights not in", values, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsBetween(Integer value1, Integer value2) {
            addCriterion("nights between", value1, value2, "nights");
            return (Criteria) this;
        }

        public Criteria andNightsNotBetween(Integer value1, Integer value2) {
            addCriterion("nights not between", value1, value2, "nights");
            return (Criteria) this;
        }

        public Criteria andTendIsNull() {
            addCriterion("tend is null");
            return (Criteria) this;
        }

        public Criteria andTendIsNotNull() {
            addCriterion("tend is not null");
            return (Criteria) this;
        }

        public Criteria andTendEqualTo(Integer value) {
            addCriterion("tend =", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotEqualTo(Integer value) {
            addCriterion("tend <>", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendGreaterThan(Integer value) {
            addCriterion("tend >", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendGreaterThanOrEqualTo(Integer value) {
            addCriterion("tend >=", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendLessThan(Integer value) {
            addCriterion("tend <", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendLessThanOrEqualTo(Integer value) {
            addCriterion("tend <=", value, "tend");
            return (Criteria) this;
        }

        public Criteria andTendIn(List<Integer> values) {
            addCriterion("tend in", values, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotIn(List<Integer> values) {
            addCriterion("tend not in", values, "tend");
            return (Criteria) this;
        }

        public Criteria andTendBetween(Integer value1, Integer value2) {
            addCriterion("tend between", value1, value2, "tend");
            return (Criteria) this;
        }

        public Criteria andTendNotBetween(Integer value1, Integer value2) {
            addCriterion("tend not between", value1, value2, "tend");
            return (Criteria) this;
        }

        public Criteria andTensIsNull() {
            addCriterion("tens is null");
            return (Criteria) this;
        }

        public Criteria andTensIsNotNull() {
            addCriterion("tens is not null");
            return (Criteria) this;
        }

        public Criteria andTensEqualTo(Integer value) {
            addCriterion("tens =", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensNotEqualTo(Integer value) {
            addCriterion("tens <>", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensGreaterThan(Integer value) {
            addCriterion("tens >", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensGreaterThanOrEqualTo(Integer value) {
            addCriterion("tens >=", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensLessThan(Integer value) {
            addCriterion("tens <", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensLessThanOrEqualTo(Integer value) {
            addCriterion("tens <=", value, "tens");
            return (Criteria) this;
        }

        public Criteria andTensIn(List<Integer> values) {
            addCriterion("tens in", values, "tens");
            return (Criteria) this;
        }

        public Criteria andTensNotIn(List<Integer> values) {
            addCriterion("tens not in", values, "tens");
            return (Criteria) this;
        }

        public Criteria andTensBetween(Integer value1, Integer value2) {
            addCriterion("tens between", value1, value2, "tens");
            return (Criteria) this;
        }

        public Criteria andTensNotBetween(Integer value1, Integer value2) {
            addCriterion("tens not between", value1, value2, "tens");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tenspdpks_count_sgds
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}