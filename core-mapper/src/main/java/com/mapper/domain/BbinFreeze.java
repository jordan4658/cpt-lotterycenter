package com.mapper.domain;

import java.io.Serializable;

public class BbinFreeze implements Serializable {
    /**
     * 字段: bbin_freeze.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: bbin_freeze.member_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 会员id
     *
     * @mbggenerated
     */
    private Integer memberId;

    /**
     * 字段: bbin_freeze.account<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 会员账号
     *
     * @mbggenerated
     */
    private String account;

    /**
     * 字段: bbin_freeze.money<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 金额
     *
     * @mbggenerated
     */
    private Long money;

    /**
     * 字段: bbin_freeze.freeze_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 冻结时间
     *
     * @mbggenerated
     */
    private String freezeTime;

    /**
     * 字段: bbin_freeze.unfreeze_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 解冻时间
     *
     * @mbggenerated
     */
    private String unfreezeTime;

    /**
     * 字段: bbin_freeze.register_equipment<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 注册设备
     *
     * @mbggenerated
     */
    private String registerEquipment;

    /**
     * 字段: bbin_freeze.register_port<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 注册端
     *
     * @mbggenerated
     */
    private String registerPort;

    /**
     * 字段: bbin_freeze.login_equipment<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 登录设备
     *
     * @mbggenerated
     */
    private String loginEquipment;

    /**
     * 字段: bbin_freeze.login_port<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 登录端
     *
     * @mbggenerated
     */
    private String loginPort;

    /**
     * 字段: bbin_freeze.system<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 系统
     *
     * @mbggenerated
     */
    private String system;

    /**
     * 字段: bbin_freeze.version<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 版本
     *
     * @mbggenerated
     */
    private String version;

    /**
     * 字段: bbin_freeze.status<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 状态
     *
     * @mbggenerated
     */
    private Integer status;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bbin_freeze
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return bbin_freeze.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: bbin_freeze.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return bbin_freeze.member_id: 会员id
     *
     * @mbggenerated
     */
    public Integer getMemberId() {
        return memberId;
    }

    /**
     * 字段: bbin_freeze.member_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 会员id
     *
     * @mbggenerated
     */
    public void setMemberId(Integer memberId) {
        this.memberId = memberId;
    }

    /**
     * @return bbin_freeze.account: 会员账号
     *
     * @mbggenerated
     */
    public String getAccount() {
        return account;
    }

    /**
     * 字段: bbin_freeze.account<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 会员账号
     *
     * @mbggenerated
     */
    public void setAccount(String account) {
        this.account = account;
    }

    /**
     * @return bbin_freeze.money: 金额
     *
     * @mbggenerated
     */
    public Long getMoney() {
        return money;
    }

    /**
     * 字段: bbin_freeze.money<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 金额
     *
     * @mbggenerated
     */
    public void setMoney(Long money) {
        this.money = money;
    }

    /**
     * @return bbin_freeze.freeze_time: 冻结时间
     *
     * @mbggenerated
     */
    public String getFreezeTime() {
        return freezeTime;
    }

    /**
     * 字段: bbin_freeze.freeze_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 冻结时间
     *
     * @mbggenerated
     */
    public void setFreezeTime(String freezeTime) {
        this.freezeTime = freezeTime;
    }

    /**
     * @return bbin_freeze.unfreeze_time: 解冻时间
     *
     * @mbggenerated
     */
    public String getUnfreezeTime() {
        return unfreezeTime;
    }

    /**
     * 字段: bbin_freeze.unfreeze_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 解冻时间
     *
     * @mbggenerated
     */
    public void setUnfreezeTime(String unfreezeTime) {
        this.unfreezeTime = unfreezeTime;
    }

    /**
     * @return bbin_freeze.register_equipment: 注册设备
     *
     * @mbggenerated
     */
    public String getRegisterEquipment() {
        return registerEquipment;
    }

    /**
     * 字段: bbin_freeze.register_equipment<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 注册设备
     *
     * @mbggenerated
     */
    public void setRegisterEquipment(String registerEquipment) {
        this.registerEquipment = registerEquipment;
    }

    /**
     * @return bbin_freeze.register_port: 注册端
     *
     * @mbggenerated
     */
    public String getRegisterPort() {
        return registerPort;
    }

    /**
     * 字段: bbin_freeze.register_port<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 注册端
     *
     * @mbggenerated
     */
    public void setRegisterPort(String registerPort) {
        this.registerPort = registerPort;
    }

    /**
     * @return bbin_freeze.login_equipment: 登录设备
     *
     * @mbggenerated
     */
    public String getLoginEquipment() {
        return loginEquipment;
    }

    /**
     * 字段: bbin_freeze.login_equipment<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 登录设备
     *
     * @mbggenerated
     */
    public void setLoginEquipment(String loginEquipment) {
        this.loginEquipment = loginEquipment;
    }

    /**
     * @return bbin_freeze.login_port: 登录端
     *
     * @mbggenerated
     */
    public String getLoginPort() {
        return loginPort;
    }

    /**
     * 字段: bbin_freeze.login_port<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 登录端
     *
     * @mbggenerated
     */
    public void setLoginPort(String loginPort) {
        this.loginPort = loginPort;
    }

    /**
     * @return bbin_freeze.system: 系统
     *
     * @mbggenerated
     */
    public String getSystem() {
        return system;
    }

    /**
     * 字段: bbin_freeze.system<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 系统
     *
     * @mbggenerated
     */
    public void setSystem(String system) {
        this.system = system;
    }

    /**
     * @return bbin_freeze.version: 版本
     *
     * @mbggenerated
     */
    public String getVersion() {
        return version;
    }

    /**
     * 字段: bbin_freeze.version<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 版本
     *
     * @mbggenerated
     */
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * @return bbin_freeze.status: 状态
     *
     * @mbggenerated
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 字段: bbin_freeze.status<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 状态
     *
     * @mbggenerated
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bbin_freeze
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        BbinFreeze other = (BbinFreeze) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getMemberId() == null ? other.getMemberId() == null : this.getMemberId().equals(other.getMemberId()))
            && (this.getAccount() == null ? other.getAccount() == null : this.getAccount().equals(other.getAccount()))
            && (this.getMoney() == null ? other.getMoney() == null : this.getMoney().equals(other.getMoney()))
            && (this.getFreezeTime() == null ? other.getFreezeTime() == null : this.getFreezeTime().equals(other.getFreezeTime()))
            && (this.getUnfreezeTime() == null ? other.getUnfreezeTime() == null : this.getUnfreezeTime().equals(other.getUnfreezeTime()))
            && (this.getRegisterEquipment() == null ? other.getRegisterEquipment() == null : this.getRegisterEquipment().equals(other.getRegisterEquipment()))
            && (this.getRegisterPort() == null ? other.getRegisterPort() == null : this.getRegisterPort().equals(other.getRegisterPort()))
            && (this.getLoginEquipment() == null ? other.getLoginEquipment() == null : this.getLoginEquipment().equals(other.getLoginEquipment()))
            && (this.getLoginPort() == null ? other.getLoginPort() == null : this.getLoginPort().equals(other.getLoginPort()))
            && (this.getSystem() == null ? other.getSystem() == null : this.getSystem().equals(other.getSystem()))
            && (this.getVersion() == null ? other.getVersion() == null : this.getVersion().equals(other.getVersion()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bbin_freeze
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getMemberId() == null) ? 0 : getMemberId().hashCode());
        result = prime * result + ((getAccount() == null) ? 0 : getAccount().hashCode());
        result = prime * result + ((getMoney() == null) ? 0 : getMoney().hashCode());
        result = prime * result + ((getFreezeTime() == null) ? 0 : getFreezeTime().hashCode());
        result = prime * result + ((getUnfreezeTime() == null) ? 0 : getUnfreezeTime().hashCode());
        result = prime * result + ((getRegisterEquipment() == null) ? 0 : getRegisterEquipment().hashCode());
        result = prime * result + ((getRegisterPort() == null) ? 0 : getRegisterPort().hashCode());
        result = prime * result + ((getLoginEquipment() == null) ? 0 : getLoginEquipment().hashCode());
        result = prime * result + ((getLoginPort() == null) ? 0 : getLoginPort().hashCode());
        result = prime * result + ((getSystem() == null) ? 0 : getSystem().hashCode());
        result = prime * result + ((getVersion() == null) ? 0 : getVersion().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bbin_freeze
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", memberId=").append(memberId);
        sb.append(", account=").append(account);
        sb.append(", money=").append(money);
        sb.append(", freezeTime=").append(freezeTime);
        sb.append(", unfreezeTime=").append(unfreezeTime);
        sb.append(", registerEquipment=").append(registerEquipment);
        sb.append(", registerPort=").append(registerPort);
        sb.append(", loginEquipment=").append(loginEquipment);
        sb.append(", loginPort=").append(loginPort);
        sb.append(", system=").append(system);
        sb.append(", version=").append(version);
        sb.append(", status=").append(status);
        sb.append("]");
        return sb.toString();
    }
}