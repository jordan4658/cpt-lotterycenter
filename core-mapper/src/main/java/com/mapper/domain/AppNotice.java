package com.mapper.domain;

import java.io.Serializable;

public class AppNotice implements Serializable {
    /**
     * 字段: app_notice.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: app_notice.category_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 分类id
     *
     * @mbggenerated
     */
    private Integer categoryId;

    /**
     * 字段: app_notice.title<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 标题
     *
     * @mbggenerated
     */
    private String title;

    /**
     * 字段: app_notice.author<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 作者
     *
     * @mbggenerated
     */
    private String author;

    /**
     * 字段: app_notice.issue_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 发布时间
     *
     * @mbggenerated
     */
    private String issueTime;

    /**
     * 字段: app_notice.start_date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效开始时间
     *
     * @mbggenerated
     */
    private String startDate;

    /**
     * 字段: app_notice.end_date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效结束时间
     *
     * @mbggenerated
     */
    private String endDate;

    /**
     * 字段: app_notice.newest<br/>
     * 必填: false<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否最新:0否;1是
     *
     * @mbggenerated
     */
    private Integer newest;

    /**
     * 字段: app_notice.status<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 状态:0,关闭活动;1,开启活动
     *
     * @mbggenerated
     */
    private Integer status;

    /**
     * 字段: app_notice.intro<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 简介
     *
     * @mbggenerated
     */
    private String intro;

    /**
     * 字段: app_notice.message<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 500<br/>
     * 说明: 内容
     *
     * @mbggenerated
     */
    private String message;

    /**
     * 字段: app_notice.popup<br/>
     * 必填: false<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否弹出(0,不弹出;1,弹出)
     *
     * @mbggenerated
     */
    private Integer popup;

    /**
     * 字段: app_notice.roll_status<br/>
     * 必填: true<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 滚动状态:0,不滚动;1,滚动
     *
     * @mbggenerated
     */
    private Integer rollStatus;

    /**
     * 字段: app_notice.create_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private String createTime;

    /**
     * 字段: app_notice.deleted<br/>
     * 必填: true<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否删除:0,否;1,是
     *
     * @mbggenerated
     */
    private Integer deleted;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table app_notice
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return app_notice.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: app_notice.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return app_notice.category_id: 分类id
     *
     * @mbggenerated
     */
    public Integer getCategoryId() {
        return categoryId;
    }

    /**
     * 字段: app_notice.category_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 分类id
     *
     * @mbggenerated
     */
    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    /**
     * @return app_notice.title: 标题
     *
     * @mbggenerated
     */
    public String getTitle() {
        return title;
    }

    /**
     * 字段: app_notice.title<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 标题
     *
     * @mbggenerated
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * @return app_notice.author: 作者
     *
     * @mbggenerated
     */
    public String getAuthor() {
        return author;
    }

    /**
     * 字段: app_notice.author<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 作者
     *
     * @mbggenerated
     */
    public void setAuthor(String author) {
        this.author = author;
    }

    /**
     * @return app_notice.issue_time: 发布时间
     *
     * @mbggenerated
     */
    public String getIssueTime() {
        return issueTime;
    }

    /**
     * 字段: app_notice.issue_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 发布时间
     *
     * @mbggenerated
     */
    public void setIssueTime(String issueTime) {
        this.issueTime = issueTime;
    }

    /**
     * @return app_notice.start_date: 有效开始时间
     *
     * @mbggenerated
     */
    public String getStartDate() {
        return startDate;
    }

    /**
     * 字段: app_notice.start_date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效开始时间
     *
     * @mbggenerated
     */
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    /**
     * @return app_notice.end_date: 有效结束时间
     *
     * @mbggenerated
     */
    public String getEndDate() {
        return endDate;
    }

    /**
     * 字段: app_notice.end_date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效结束时间
     *
     * @mbggenerated
     */
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    /**
     * @return app_notice.newest: 是否最新:0否;1是
     *
     * @mbggenerated
     */
    public Integer getNewest() {
        return newest;
    }

    /**
     * 字段: app_notice.newest<br/>
     * 必填: false<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否最新:0否;1是
     *
     * @mbggenerated
     */
    public void setNewest(Integer newest) {
        this.newest = newest;
    }

    /**
     * @return app_notice.status: 状态:0,关闭活动;1,开启活动
     *
     * @mbggenerated
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 字段: app_notice.status<br/>
     * 必填: false<br/>
     * 缺省: 1<br/>
     * 长度: 10<br/>
     * 说明: 状态:0,关闭活动;1,开启活动
     *
     * @mbggenerated
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * @return app_notice.intro: 简介
     *
     * @mbggenerated
     */
    public String getIntro() {
        return intro;
    }

    /**
     * 字段: app_notice.intro<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 255<br/>
     * 说明: 简介
     *
     * @mbggenerated
     */
    public void setIntro(String intro) {
        this.intro = intro;
    }

    /**
     * @return app_notice.message: 内容
     *
     * @mbggenerated
     */
    public String getMessage() {
        return message;
    }

    /**
     * 字段: app_notice.message<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 500<br/>
     * 说明: 内容
     *
     * @mbggenerated
     */
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * @return app_notice.popup: 是否弹出(0,不弹出;1,弹出)
     *
     * @mbggenerated
     */
    public Integer getPopup() {
        return popup;
    }

    /**
     * 字段: app_notice.popup<br/>
     * 必填: false<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否弹出(0,不弹出;1,弹出)
     *
     * @mbggenerated
     */
    public void setPopup(Integer popup) {
        this.popup = popup;
    }

    /**
     * @return app_notice.roll_status: 滚动状态:0,不滚动;1,滚动
     *
     * @mbggenerated
     */
    public Integer getRollStatus() {
        return rollStatus;
    }

    /**
     * 字段: app_notice.roll_status<br/>
     * 必填: true<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 滚动状态:0,不滚动;1,滚动
     *
     * @mbggenerated
     */
    public void setRollStatus(Integer rollStatus) {
        this.rollStatus = rollStatus;
    }

    /**
     * @return app_notice.create_time: 
     *
     * @mbggenerated
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * 字段: app_notice.create_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }

    /**
     * @return app_notice.deleted: 是否删除:0,否;1,是
     *
     * @mbggenerated
     */
    public Integer getDeleted() {
        return deleted;
    }

    /**
     * 字段: app_notice.deleted<br/>
     * 必填: true<br/>
     * 缺省: 0<br/>
     * 长度: 10<br/>
     * 说明: 是否删除:0,否;1,是
     *
     * @mbggenerated
     */
    public void setDeleted(Integer deleted) {
        this.deleted = deleted;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_notice
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        AppNotice other = (AppNotice) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getCategoryId() == null ? other.getCategoryId() == null : this.getCategoryId().equals(other.getCategoryId()))
            && (this.getTitle() == null ? other.getTitle() == null : this.getTitle().equals(other.getTitle()))
            && (this.getAuthor() == null ? other.getAuthor() == null : this.getAuthor().equals(other.getAuthor()))
            && (this.getIssueTime() == null ? other.getIssueTime() == null : this.getIssueTime().equals(other.getIssueTime()))
            && (this.getStartDate() == null ? other.getStartDate() == null : this.getStartDate().equals(other.getStartDate()))
            && (this.getEndDate() == null ? other.getEndDate() == null : this.getEndDate().equals(other.getEndDate()))
            && (this.getNewest() == null ? other.getNewest() == null : this.getNewest().equals(other.getNewest()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getIntro() == null ? other.getIntro() == null : this.getIntro().equals(other.getIntro()))
            && (this.getMessage() == null ? other.getMessage() == null : this.getMessage().equals(other.getMessage()))
            && (this.getPopup() == null ? other.getPopup() == null : this.getPopup().equals(other.getPopup()))
            && (this.getRollStatus() == null ? other.getRollStatus() == null : this.getRollStatus().equals(other.getRollStatus()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getDeleted() == null ? other.getDeleted() == null : this.getDeleted().equals(other.getDeleted()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_notice
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getCategoryId() == null) ? 0 : getCategoryId().hashCode());
        result = prime * result + ((getTitle() == null) ? 0 : getTitle().hashCode());
        result = prime * result + ((getAuthor() == null) ? 0 : getAuthor().hashCode());
        result = prime * result + ((getIssueTime() == null) ? 0 : getIssueTime().hashCode());
        result = prime * result + ((getStartDate() == null) ? 0 : getStartDate().hashCode());
        result = prime * result + ((getEndDate() == null) ? 0 : getEndDate().hashCode());
        result = prime * result + ((getNewest() == null) ? 0 : getNewest().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getIntro() == null) ? 0 : getIntro().hashCode());
        result = prime * result + ((getMessage() == null) ? 0 : getMessage().hashCode());
        result = prime * result + ((getPopup() == null) ? 0 : getPopup().hashCode());
        result = prime * result + ((getRollStatus() == null) ? 0 : getRollStatus().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getDeleted() == null) ? 0 : getDeleted().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_notice
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", categoryId=").append(categoryId);
        sb.append(", title=").append(title);
        sb.append(", author=").append(author);
        sb.append(", issueTime=").append(issueTime);
        sb.append(", startDate=").append(startDate);
        sb.append(", endDate=").append(endDate);
        sb.append(", newest=").append(newest);
        sb.append(", status=").append(status);
        sb.append(", intro=").append(intro);
        sb.append(", message=").append(message);
        sb.append(", popup=").append(popup);
        sb.append(", rollStatus=").append(rollStatus);
        sb.append(", createTime=").append(createTime);
        sb.append(", deleted=").append(deleted);
        sb.append("]");
        return sb.toString();
    }
}