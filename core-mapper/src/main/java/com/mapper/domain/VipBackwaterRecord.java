package com.mapper.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class VipBackwaterRecord implements Serializable {
    /**
     * 字段: vip_backwater_record.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: vip_backwater_record.user_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer userId;

    /**
     * 字段: vip_backwater_record.valid_bet_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效投注
     *
     * @mbggenerated
     */
    private BigDecimal validBetAmount;

    /**
     * 字段: vip_backwater_record.upgrade_awards<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 升级奖励
     *
     * @mbggenerated
     */
    private BigDecimal upgradeAwards;

    /**
     * 字段: vip_backwater_record.backwater_rate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 返水比例
     *
     * @mbggenerated
     */
    private BigDecimal backwaterRate;

    /**
     * 字段: vip_backwater_record.backwater_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 返水金额
     *
     * @mbggenerated
     */
    private BigDecimal backwaterAmount;

    /**
     * 字段: vip_backwater_record.create_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return vip_backwater_record.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: vip_backwater_record.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return vip_backwater_record.user_id: 
     *
     * @mbggenerated
     */
    public Integer getUserId() {
        return userId;
    }

    /**
     * 字段: vip_backwater_record.user_id<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * @return vip_backwater_record.valid_bet_amount: 有效投注
     *
     * @mbggenerated
     */
    public BigDecimal getValidBetAmount() {
        return validBetAmount;
    }

    /**
     * 字段: vip_backwater_record.valid_bet_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 有效投注
     *
     * @mbggenerated
     */
    public void setValidBetAmount(BigDecimal validBetAmount) {
        this.validBetAmount = validBetAmount;
    }

    /**
     * @return vip_backwater_record.upgrade_awards: 升级奖励
     *
     * @mbggenerated
     */
    public BigDecimal getUpgradeAwards() {
        return upgradeAwards;
    }

    /**
     * 字段: vip_backwater_record.upgrade_awards<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 升级奖励
     *
     * @mbggenerated
     */
    public void setUpgradeAwards(BigDecimal upgradeAwards) {
        this.upgradeAwards = upgradeAwards;
    }

    /**
     * @return vip_backwater_record.backwater_rate: 返水比例
     *
     * @mbggenerated
     */
    public BigDecimal getBackwaterRate() {
        return backwaterRate;
    }

    /**
     * 字段: vip_backwater_record.backwater_rate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 返水比例
     *
     * @mbggenerated
     */
    public void setBackwaterRate(BigDecimal backwaterRate) {
        this.backwaterRate = backwaterRate;
    }

    /**
     * @return vip_backwater_record.backwater_amount: 返水金额
     *
     * @mbggenerated
     */
    public BigDecimal getBackwaterAmount() {
        return backwaterAmount;
    }

    /**
     * 字段: vip_backwater_record.backwater_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 返水金额
     *
     * @mbggenerated
     */
    public void setBackwaterAmount(BigDecimal backwaterAmount) {
        this.backwaterAmount = backwaterAmount;
    }

    /**
     * @return vip_backwater_record.create_time: 
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: vip_backwater_record.create_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        VipBackwaterRecord other = (VipBackwaterRecord) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getUserId() == null ? other.getUserId() == null : this.getUserId().equals(other.getUserId()))
            && (this.getValidBetAmount() == null ? other.getValidBetAmount() == null : this.getValidBetAmount().equals(other.getValidBetAmount()))
            && (this.getUpgradeAwards() == null ? other.getUpgradeAwards() == null : this.getUpgradeAwards().equals(other.getUpgradeAwards()))
            && (this.getBackwaterRate() == null ? other.getBackwaterRate() == null : this.getBackwaterRate().equals(other.getBackwaterRate()))
            && (this.getBackwaterAmount() == null ? other.getBackwaterAmount() == null : this.getBackwaterAmount().equals(other.getBackwaterAmount()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getUserId() == null) ? 0 : getUserId().hashCode());
        result = prime * result + ((getValidBetAmount() == null) ? 0 : getValidBetAmount().hashCode());
        result = prime * result + ((getUpgradeAwards() == null) ? 0 : getUpgradeAwards().hashCode());
        result = prime * result + ((getBackwaterRate() == null) ? 0 : getBackwaterRate().hashCode());
        result = prime * result + ((getBackwaterAmount() == null) ? 0 : getBackwaterAmount().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", userId=").append(userId);
        sb.append(", validBetAmount=").append(validBetAmount);
        sb.append(", upgradeAwards=").append(upgradeAwards);
        sb.append(", backwaterRate=").append(backwaterRate);
        sb.append(", backwaterAmount=").append(backwaterAmount);
        sb.append(", createTime=").append(createTime);
        sb.append("]");
        return sb.toString();
    }
}