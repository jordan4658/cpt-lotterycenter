package com.mapper.domain;

import java.io.Serializable;

public class FiveluckpksCountSgds implements Serializable {
    /**
     * 字段: fiveluckpks_count_sgds.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: fiveluckpks_count_sgds.date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 日期
     *
     * @mbggenerated
     */
    private String date;

    /**
     * 字段: fiveluckpks_count_sgds.oned<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 第一名出现单的次数
     *
     * @mbggenerated
     */
    private Integer oned;

    /**
     * 字段: fiveluckpks_count_sgds.ones<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 第一名出现双的次数
     *
     * @mbggenerated
     */
    private Integer ones;

    /**
     * 字段: fiveluckpks_count_sgds.twod<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer twod;

    /**
     * 字段: fiveluckpks_count_sgds.twos<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer twos;

    /**
     * 字段: fiveluckpks_count_sgds.threed<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer threed;

    /**
     * 字段: fiveluckpks_count_sgds.threes<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer threes;

    /**
     * 字段: fiveluckpks_count_sgds.fourd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer fourd;

    /**
     * 字段: fiveluckpks_count_sgds.fours<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer fours;

    /**
     * 字段: fiveluckpks_count_sgds.fived<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer fived;

    /**
     * 字段: fiveluckpks_count_sgds.fives<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer fives;

    /**
     * 字段: fiveluckpks_count_sgds.sixd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer sixd;

    /**
     * 字段: fiveluckpks_count_sgds.sixs<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer sixs;

    /**
     * 字段: fiveluckpks_count_sgds.sevend<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer sevend;

    /**
     * 字段: fiveluckpks_count_sgds.sevens<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer sevens;

    /**
     * 字段: fiveluckpks_count_sgds.eightd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer eightd;

    /**
     * 字段: fiveluckpks_count_sgds.eights<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer eights;

    /**
     * 字段: fiveluckpks_count_sgds.nightd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer nightd;

    /**
     * 字段: fiveluckpks_count_sgds.nights<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer nights;

    /**
     * 字段: fiveluckpks_count_sgds.tend<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer tend;

    /**
     * 字段: fiveluckpks_count_sgds.tens<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer tens;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fiveluckpks_count_sgds
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return fiveluckpks_count_sgds.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: fiveluckpks_count_sgds.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return fiveluckpks_count_sgds.date: 日期
     *
     * @mbggenerated
     */
    public String getDate() {
        return date;
    }

    /**
     * 字段: fiveluckpks_count_sgds.date<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 日期
     *
     * @mbggenerated
     */
    public void setDate(String date) {
        this.date = date;
    }

    /**
     * @return fiveluckpks_count_sgds.oned: 第一名出现单的次数
     *
     * @mbggenerated
     */
    public Integer getOned() {
        return oned;
    }

    /**
     * 字段: fiveluckpks_count_sgds.oned<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 第一名出现单的次数
     *
     * @mbggenerated
     */
    public void setOned(Integer oned) {
        this.oned = oned;
    }

    /**
     * @return fiveluckpks_count_sgds.ones: 第一名出现双的次数
     *
     * @mbggenerated
     */
    public Integer getOnes() {
        return ones;
    }

    /**
     * 字段: fiveluckpks_count_sgds.ones<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 第一名出现双的次数
     *
     * @mbggenerated
     */
    public void setOnes(Integer ones) {
        this.ones = ones;
    }

    /**
     * @return fiveluckpks_count_sgds.twod: 
     *
     * @mbggenerated
     */
    public Integer getTwod() {
        return twod;
    }

    /**
     * 字段: fiveluckpks_count_sgds.twod<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setTwod(Integer twod) {
        this.twod = twod;
    }

    /**
     * @return fiveluckpks_count_sgds.twos: 
     *
     * @mbggenerated
     */
    public Integer getTwos() {
        return twos;
    }

    /**
     * 字段: fiveluckpks_count_sgds.twos<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setTwos(Integer twos) {
        this.twos = twos;
    }

    /**
     * @return fiveluckpks_count_sgds.threed: 
     *
     * @mbggenerated
     */
    public Integer getThreed() {
        return threed;
    }

    /**
     * 字段: fiveluckpks_count_sgds.threed<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setThreed(Integer threed) {
        this.threed = threed;
    }

    /**
     * @return fiveluckpks_count_sgds.threes: 
     *
     * @mbggenerated
     */
    public Integer getThrees() {
        return threes;
    }

    /**
     * 字段: fiveluckpks_count_sgds.threes<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setThrees(Integer threes) {
        this.threes = threes;
    }

    /**
     * @return fiveluckpks_count_sgds.fourd: 
     *
     * @mbggenerated
     */
    public Integer getFourd() {
        return fourd;
    }

    /**
     * 字段: fiveluckpks_count_sgds.fourd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setFourd(Integer fourd) {
        this.fourd = fourd;
    }

    /**
     * @return fiveluckpks_count_sgds.fours: 
     *
     * @mbggenerated
     */
    public Integer getFours() {
        return fours;
    }

    /**
     * 字段: fiveluckpks_count_sgds.fours<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setFours(Integer fours) {
        this.fours = fours;
    }

    /**
     * @return fiveluckpks_count_sgds.fived: 
     *
     * @mbggenerated
     */
    public Integer getFived() {
        return fived;
    }

    /**
     * 字段: fiveluckpks_count_sgds.fived<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setFived(Integer fived) {
        this.fived = fived;
    }

    /**
     * @return fiveluckpks_count_sgds.fives: 
     *
     * @mbggenerated
     */
    public Integer getFives() {
        return fives;
    }

    /**
     * 字段: fiveluckpks_count_sgds.fives<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setFives(Integer fives) {
        this.fives = fives;
    }

    /**
     * @return fiveluckpks_count_sgds.sixd: 
     *
     * @mbggenerated
     */
    public Integer getSixd() {
        return sixd;
    }

    /**
     * 字段: fiveluckpks_count_sgds.sixd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setSixd(Integer sixd) {
        this.sixd = sixd;
    }

    /**
     * @return fiveluckpks_count_sgds.sixs: 
     *
     * @mbggenerated
     */
    public Integer getSixs() {
        return sixs;
    }

    /**
     * 字段: fiveluckpks_count_sgds.sixs<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setSixs(Integer sixs) {
        this.sixs = sixs;
    }

    /**
     * @return fiveluckpks_count_sgds.sevend: 
     *
     * @mbggenerated
     */
    public Integer getSevend() {
        return sevend;
    }

    /**
     * 字段: fiveluckpks_count_sgds.sevend<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setSevend(Integer sevend) {
        this.sevend = sevend;
    }

    /**
     * @return fiveluckpks_count_sgds.sevens: 
     *
     * @mbggenerated
     */
    public Integer getSevens() {
        return sevens;
    }

    /**
     * 字段: fiveluckpks_count_sgds.sevens<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setSevens(Integer sevens) {
        this.sevens = sevens;
    }

    /**
     * @return fiveluckpks_count_sgds.eightd: 
     *
     * @mbggenerated
     */
    public Integer getEightd() {
        return eightd;
    }

    /**
     * 字段: fiveluckpks_count_sgds.eightd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setEightd(Integer eightd) {
        this.eightd = eightd;
    }

    /**
     * @return fiveluckpks_count_sgds.eights: 
     *
     * @mbggenerated
     */
    public Integer getEights() {
        return eights;
    }

    /**
     * 字段: fiveluckpks_count_sgds.eights<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setEights(Integer eights) {
        this.eights = eights;
    }

    /**
     * @return fiveluckpks_count_sgds.nightd: 
     *
     * @mbggenerated
     */
    public Integer getNightd() {
        return nightd;
    }

    /**
     * 字段: fiveluckpks_count_sgds.nightd<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setNightd(Integer nightd) {
        this.nightd = nightd;
    }

    /**
     * @return fiveluckpks_count_sgds.nights: 
     *
     * @mbggenerated
     */
    public Integer getNights() {
        return nights;
    }

    /**
     * 字段: fiveluckpks_count_sgds.nights<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setNights(Integer nights) {
        this.nights = nights;
    }

    /**
     * @return fiveluckpks_count_sgds.tend: 
     *
     * @mbggenerated
     */
    public Integer getTend() {
        return tend;
    }

    /**
     * 字段: fiveluckpks_count_sgds.tend<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setTend(Integer tend) {
        this.tend = tend;
    }

    /**
     * @return fiveluckpks_count_sgds.tens: 
     *
     * @mbggenerated
     */
    public Integer getTens() {
        return tens;
    }

    /**
     * 字段: fiveluckpks_count_sgds.tens<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setTens(Integer tens) {
        this.tens = tens;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgds
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        FiveluckpksCountSgds other = (FiveluckpksCountSgds) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getDate() == null ? other.getDate() == null : this.getDate().equals(other.getDate()))
            && (this.getOned() == null ? other.getOned() == null : this.getOned().equals(other.getOned()))
            && (this.getOnes() == null ? other.getOnes() == null : this.getOnes().equals(other.getOnes()))
            && (this.getTwod() == null ? other.getTwod() == null : this.getTwod().equals(other.getTwod()))
            && (this.getTwos() == null ? other.getTwos() == null : this.getTwos().equals(other.getTwos()))
            && (this.getThreed() == null ? other.getThreed() == null : this.getThreed().equals(other.getThreed()))
            && (this.getThrees() == null ? other.getThrees() == null : this.getThrees().equals(other.getThrees()))
            && (this.getFourd() == null ? other.getFourd() == null : this.getFourd().equals(other.getFourd()))
            && (this.getFours() == null ? other.getFours() == null : this.getFours().equals(other.getFours()))
            && (this.getFived() == null ? other.getFived() == null : this.getFived().equals(other.getFived()))
            && (this.getFives() == null ? other.getFives() == null : this.getFives().equals(other.getFives()))
            && (this.getSixd() == null ? other.getSixd() == null : this.getSixd().equals(other.getSixd()))
            && (this.getSixs() == null ? other.getSixs() == null : this.getSixs().equals(other.getSixs()))
            && (this.getSevend() == null ? other.getSevend() == null : this.getSevend().equals(other.getSevend()))
            && (this.getSevens() == null ? other.getSevens() == null : this.getSevens().equals(other.getSevens()))
            && (this.getEightd() == null ? other.getEightd() == null : this.getEightd().equals(other.getEightd()))
            && (this.getEights() == null ? other.getEights() == null : this.getEights().equals(other.getEights()))
            && (this.getNightd() == null ? other.getNightd() == null : this.getNightd().equals(other.getNightd()))
            && (this.getNights() == null ? other.getNights() == null : this.getNights().equals(other.getNights()))
            && (this.getTend() == null ? other.getTend() == null : this.getTend().equals(other.getTend()))
            && (this.getTens() == null ? other.getTens() == null : this.getTens().equals(other.getTens()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgds
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getDate() == null) ? 0 : getDate().hashCode());
        result = prime * result + ((getOned() == null) ? 0 : getOned().hashCode());
        result = prime * result + ((getOnes() == null) ? 0 : getOnes().hashCode());
        result = prime * result + ((getTwod() == null) ? 0 : getTwod().hashCode());
        result = prime * result + ((getTwos() == null) ? 0 : getTwos().hashCode());
        result = prime * result + ((getThreed() == null) ? 0 : getThreed().hashCode());
        result = prime * result + ((getThrees() == null) ? 0 : getThrees().hashCode());
        result = prime * result + ((getFourd() == null) ? 0 : getFourd().hashCode());
        result = prime * result + ((getFours() == null) ? 0 : getFours().hashCode());
        result = prime * result + ((getFived() == null) ? 0 : getFived().hashCode());
        result = prime * result + ((getFives() == null) ? 0 : getFives().hashCode());
        result = prime * result + ((getSixd() == null) ? 0 : getSixd().hashCode());
        result = prime * result + ((getSixs() == null) ? 0 : getSixs().hashCode());
        result = prime * result + ((getSevend() == null) ? 0 : getSevend().hashCode());
        result = prime * result + ((getSevens() == null) ? 0 : getSevens().hashCode());
        result = prime * result + ((getEightd() == null) ? 0 : getEightd().hashCode());
        result = prime * result + ((getEights() == null) ? 0 : getEights().hashCode());
        result = prime * result + ((getNightd() == null) ? 0 : getNightd().hashCode());
        result = prime * result + ((getNights() == null) ? 0 : getNights().hashCode());
        result = prime * result + ((getTend() == null) ? 0 : getTend().hashCode());
        result = prime * result + ((getTens() == null) ? 0 : getTens().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fiveluckpks_count_sgds
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", date=").append(date);
        sb.append(", oned=").append(oned);
        sb.append(", ones=").append(ones);
        sb.append(", twod=").append(twod);
        sb.append(", twos=").append(twos);
        sb.append(", threed=").append(threed);
        sb.append(", threes=").append(threes);
        sb.append(", fourd=").append(fourd);
        sb.append(", fours=").append(fours);
        sb.append(", fived=").append(fived);
        sb.append(", fives=").append(fives);
        sb.append(", sixd=").append(sixd);
        sb.append(", sixs=").append(sixs);
        sb.append(", sevend=").append(sevend);
        sb.append(", sevens=").append(sevens);
        sb.append(", eightd=").append(eightd);
        sb.append(", eights=").append(eights);
        sb.append(", nightd=").append(nightd);
        sb.append(", nights=").append(nights);
        sb.append(", tend=").append(tend);
        sb.append(", tens=").append(tens);
        sb.append("]");
        return sb.toString();
    }
}