package com.mapper.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class VipBackwaterRecordExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public VipBackwaterRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public VipBackwaterRecordExample bound(Integer offset, Integer limit) {
        this.offset = offset;
        this.limit = limit;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountIsNull() {
            addCriterion("valid_bet_amount is null");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountIsNotNull() {
            addCriterion("valid_bet_amount is not null");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountEqualTo(BigDecimal value) {
            addCriterion("valid_bet_amount =", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountNotEqualTo(BigDecimal value) {
            addCriterion("valid_bet_amount <>", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountGreaterThan(BigDecimal value) {
            addCriterion("valid_bet_amount >", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("valid_bet_amount >=", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountLessThan(BigDecimal value) {
            addCriterion("valid_bet_amount <", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("valid_bet_amount <=", value, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountIn(List<BigDecimal> values) {
            addCriterion("valid_bet_amount in", values, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountNotIn(List<BigDecimal> values) {
            addCriterion("valid_bet_amount not in", values, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("valid_bet_amount between", value1, value2, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andValidBetAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("valid_bet_amount not between", value1, value2, "validBetAmount");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsIsNull() {
            addCriterion("upgrade_awards is null");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsIsNotNull() {
            addCriterion("upgrade_awards is not null");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsEqualTo(BigDecimal value) {
            addCriterion("upgrade_awards =", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsNotEqualTo(BigDecimal value) {
            addCriterion("upgrade_awards <>", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsGreaterThan(BigDecimal value) {
            addCriterion("upgrade_awards >", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("upgrade_awards >=", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsLessThan(BigDecimal value) {
            addCriterion("upgrade_awards <", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("upgrade_awards <=", value, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsIn(List<BigDecimal> values) {
            addCriterion("upgrade_awards in", values, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsNotIn(List<BigDecimal> values) {
            addCriterion("upgrade_awards not in", values, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("upgrade_awards between", value1, value2, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andUpgradeAwardsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("upgrade_awards not between", value1, value2, "upgradeAwards");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateIsNull() {
            addCriterion("backwater_rate is null");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateIsNotNull() {
            addCriterion("backwater_rate is not null");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateEqualTo(BigDecimal value) {
            addCriterion("backwater_rate =", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateNotEqualTo(BigDecimal value) {
            addCriterion("backwater_rate <>", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateGreaterThan(BigDecimal value) {
            addCriterion("backwater_rate >", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("backwater_rate >=", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateLessThan(BigDecimal value) {
            addCriterion("backwater_rate <", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("backwater_rate <=", value, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateIn(List<BigDecimal> values) {
            addCriterion("backwater_rate in", values, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateNotIn(List<BigDecimal> values) {
            addCriterion("backwater_rate not in", values, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("backwater_rate between", value1, value2, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("backwater_rate not between", value1, value2, "backwaterRate");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountIsNull() {
            addCriterion("backwater_amount is null");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountIsNotNull() {
            addCriterion("backwater_amount is not null");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountEqualTo(BigDecimal value) {
            addCriterion("backwater_amount =", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountNotEqualTo(BigDecimal value) {
            addCriterion("backwater_amount <>", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountGreaterThan(BigDecimal value) {
            addCriterion("backwater_amount >", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("backwater_amount >=", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountLessThan(BigDecimal value) {
            addCriterion("backwater_amount <", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("backwater_amount <=", value, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountIn(List<BigDecimal> values) {
            addCriterion("backwater_amount in", values, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountNotIn(List<BigDecimal> values) {
            addCriterion("backwater_amount not in", values, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("backwater_amount between", value1, value2, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andBackwaterAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("backwater_amount not between", value1, value2, "backwaterAmount");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vip_backwater_record
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vip_backwater_record
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}