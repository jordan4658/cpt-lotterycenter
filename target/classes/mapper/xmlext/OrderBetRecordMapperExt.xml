<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caipiao.live.common.mybatis.mapperext.order.OrderBetRecordMapperExt">
    <resultMap id="BaseResultMap" type="com.caipiao.live.common.mybatis.entity.OrderBetRecord">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="cate_id" jdbcType="INTEGER" property="cateId"/>
        <result column="lottery_id" jdbcType="INTEGER" property="lotteryId"/>
        <result column="play_id" jdbcType="INTEGER" property="playId"/>
        <result column="setting_id" jdbcType="INTEGER" property="settingId"/>
        <result column="play_name" jdbcType="VARCHAR" property="playName"/>
        <result column="issue" jdbcType="CHAR" property="issue"/>
        <result column="order_sn" jdbcType="CHAR" property="orderSn"/>
        <result column="bet_number" jdbcType="CHAR" property="betNumber"/>
        <result column="bet_count" jdbcType="INTEGER" property="betCount"/>
        <result column="bet_amount" jdbcType="DECIMAL" property="betAmount"/>
        <result column="win_amount" jdbcType="DECIMAL" property="winAmount"/>
        <result column="back_amount" jdbcType="DECIMAL" property="backAmount"/>
        <result column="god_order_id" jdbcType="INTEGER" property="godOrderId"/>
        <result column="tb_status" jdbcType="CHAR" property="tbStatus"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="win_count" jdbcType="VARCHAR" property="winCount"/>
        <result column="is_push" jdbcType="INTEGER" property="isPush"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="source" jdbcType="CHAR" property="source"/>
    </resultMap>

    <sql id="Join_Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id , user_id as userId , order_id as orderId, lottery_id as lotteryId, play_id as playId, setting_id as settingId, play_name as playName, bet_number as betNumber,
        bet_count as betCount ,
        bet_amount as betAmount,
        win_amount as winAmount, back_amount as backAmount, god_order_id as godOrderId, tb_status as tbStatus, create_time as createTime , update_time as updateTime, is_push as isPush,
        win_count as winCount, issue ,order_sn as orderSn ,source , win_amount - bet_amount as win
    </sql>


    <!--查询总投注 总赢 总返水  用户量       -->
    <select id="selectMoneyByplayId" resultType="java.util.HashMap">
        select count(user_id)          as totalCount,
               count(distinct user_id) as userCount,
               sum(bet_amount)         as allBetAmount,
               sum(win_amount)         as allWinAmount,
               sum(back_amount)        as allBackAmount
        from lottery_order_bet_record
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="orderCode != null and orderCode != ''">
                and order_sn = #{orderCode}
            </if>
            <if test="issue != null and issue != ''">
                and issue = #{issue}
            </if>
            <if test="playids != null and playids.size == 1">
                and play_id = #{playids[0]}
            </if>
            <if test="playids != null and playids.size > 1">
                and play_id in
                <foreach collection="playids" item="playid" open="(" close=")" separator=",">
                    #{playid}
                </foreach>
            </if>
            <if test="lotteries != null and lotteries.size == 1">
                and lottery_id = #{lotteries[0]}
            </if>
            <if test="cateId != null and cateId != 0">
                and cate_id = #{cateId}
            </if>
            <if test="status != null and status != ''">
                and tb_status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                <![CDATA[
                and create_time >= #{startTime}
                ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[
                and create_time <= #{endTime}
                ]]>
            </if>
        </where>
    </select>
    <!--    查询有效投注    -->
    <select id="selectVaildMoneyByplayId" resultType="java.util.HashMap">
        select sum(bet_amount) as allVaildBetAmount
        from lottery_order_bet_record
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="orderCode != null and orderCode != ''">
                and order_sn = #{orderCode}
            </if>
            <if test="issue != null and issue != ''">
                and issue = #{issue}
            </if>
            <if test="playids != null and playids.size == 1">
                and play_id = #{playids[0]}
            </if>
            <if test="playids != null and playids.size > 1">
                and play_id in
                <foreach collection="playids" item="playid" open="(" close=")" separator=",">
                    #{playid}
                </foreach>
            </if>
            <if test="lotteries != null and lotteries.size == 1">
                and lottery_id = #{lotteries[0]}
            </if>
            <if test="cateId != null and cateId != 0">
                and cate_id = #{cateId}
            </if>
            <if test="status == null or status == ''">
                and (tb_status = 'NO_WIN' OR tb_status = 'WIN' OR tb_status = 'HE')
            </if>
            <if test="status != null and status != ''">
                and tb_status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                <![CDATA[
                and create_time >= #{startTime}
                ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[
                and create_time <= #{endTime}
                ]]>
            </if>
        </where>
    </select>

    <select id="selectAllOrder" resultType="com.caipiao.live.common.model.dto.order.OrderBetRecordResultDTO">
        select
        <include refid="Join_Base_Column_List"/>

        from lottery_order_bet_record
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="playids != null and playids.size == 1">
                and play_id = #{playids[0]}
            </if>
            <if test="playids != null and playids.size > 1">
                and play_id in
                <foreach collection="playids" item="playid" open="(" close=")" separator=",">
                    #{playid}
                </foreach>
            </if>
            <if test="lotteries != null and lotteries.size == 1">
                and lottery_id = #{lotteries[0]}
            </if>
            <if test="cateId != null and cateId != 0">
                and cate_id = #{cateId}
            </if>
            <if test="issue != null and issue != ''">
                and issue = #{issue}
            </if>
            <if test="orderCode != null and orderCode != ''">
                and order_sn = #{orderCode}
            </if>
            <if test="status != null and status != ''">
                and tb_status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                <![CDATA[
                and create_time >= #{startTime}
                ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[
                and create_time <= #{endTime}
                ]]>
            </if>
        </where>

        <if test="sortType != null">
            order by ${sortType}  desc
        </if>
        <if test="sortType == null or sortType == ''">
            order by create_time  desc , id asc
        </if>
        <if test="limit != null and limit &gt;= 0 and offset != null">
            limit ${offset} , ${limit}
        </if>
    </select>

    <select id="getOrderBetRecordAmount" parameterType="java.util.List" resultType="java.math.BigDecimal">
        SELECT ifnull(sum(o.bet_amount),0.00) from order_bet_record o
        where o.id in
        <foreach close=")" collection="list" index="index" item="s" open="(" separator=",">
            #{s}
        </foreach>
    </select>

    <!--根据期号或者订单号查询总投注 总赢 总返水  用户量       期号 或者 订单号-->
    <!--    <select id="selectMoneyByIssue" resultType="java.util.HashMap">-->
    <!--        select count(bet.user_id) as totalCount, count(distinct bet.user_id) as userCount , sum(bet.bet_amount) as allBetAmount ,sum(bet.win_amount) as allWinAmount ,sum(bet.back_amount) as allBackAmount from lottery_order_bet_record bet left join order_record record on record.id = bet.order_id-->
    <!--        <where>-->
    <!--            <if test="userId !=null and userId != ''">-->
    <!--                and bet.user_id = #{userId}-->
    <!--            </if>-->
    <!--            <if test="playids !=null and playids.size  == 1">-->
    <!--                and bet.play_id = #{playids[0]}-->
    <!--            </if>-->
    <!--            <if test="playids !=null and playids.size  > 1">-->
    <!--                and bet.play_id in-->
    <!--                <foreach collection="playids" item="playid" open="(" close=")" separator=",">-->
    <!--                    #{playid}-->
    <!--                </foreach>-->
    <!--            </if>-->
    <!--            <if test="lotteries !=null and lotteries.size  == 1">-->
    <!--                and bet.lottery_id = #{lotteries[0]}-->
    <!--            </if>-->
    <!--            <if test="lotteries !=null and lotteries.size  > 1">-->
    <!--                and bet.lottery_id in-->
    <!--                <foreach collection="lotteries" item="lotteryId" open="(" close=")" separator=",">-->
    <!--                    #{lotteryId}-->
    <!--                </foreach>-->
    <!--            </if>-->
    <!--            <if test="issue !=null and issue != ''">-->
    <!--                and record.issue = #{issue}-->
    <!--            </if>-->
    <!--            <if test="orderCode !=null and orderCode != ''">-->
    <!--                and record.order_sn = #{orderCode}-->
    <!--            </if>-->
    <!--            <if test="status !=null and status != ''">-->
    <!--                and bet.tb_status = #{status}-->
    <!--            </if>-->
    <!--            <if test="startTime !=null and startTime !=''">-->
    <!--                <![CDATA[ and bet.create_time  >=  #{startTime}  ]]>-->
    <!--            </if>-->
    <!--            <if test="endTime !=null and endTime !=''">-->
    <!--                <![CDATA[ and bet.create_time <=  #{endTime}  ]]>-->
    <!--            </if>-->
    <!--        </where>-->

    <!--    </select>-->
    <!--  根据期号 或者订单号   查询有效投注    -->
    <!--    <select id="selectVaildMoneyByIssue" resultType="java.util.HashMap">-->
    <!--        select sum(bet.bet_amount)as allVaildBetAmount from lottery_order_bet_record as bet left join order_record as record on record.id = bet.order_id-->
    <!--        <where>-->
    <!--            <if test="userId !=null and userId != ''">-->
    <!--                and bet.user_id = #{userId}-->
    <!--            </if>-->
    <!--            <if test="playids !=null and playids.size  == 1">-->
    <!--                and bet.play_id = #{playids[0]}-->
    <!--            </if>-->
    <!--            <if test="playids !=null and playids.size  > 1">-->
    <!--                and bet.play_id in-->
    <!--                <foreach collection="playids" item="playid" open="(" close=")" separator=",">-->
    <!--                    #{playid}-->
    <!--                </foreach>-->
    <!--            </if>-->
    <!--            <if test="lotteries !=null and lotteries.size  == 1">-->
    <!--                and bet.lottery_id = #{lotteries[0]}-->
    <!--            </if>-->
    <!--            <if test="lotteries !=null and lotteries.size  > 1">-->
    <!--                and bet.lottery_id in-->
    <!--                <foreach collection="lotteries" item="lotteryId" open="(" close=")" separator=",">-->
    <!--                    #{lotteryId}-->
    <!--                </foreach>-->
    <!--            </if>-->
    <!--            <if test="issue !=null and issue != ''">-->
    <!--                and record.issue = #{issue}-->
    <!--            </if>-->
    <!--            <if test="orderCode !=null and orderCode != ''">-->
    <!--                and record.order_sn = #{orderCode}-->
    <!--            </if>-->
    <!--            <if test="status ==null or status == ''">-->
    <!--                and ( bet.tb_status = 'NO_WIN' OR bet.tb_status = 'WIN' OR bet.tb_status = 'HE' )-->
    <!--            </if>-->
    <!--            <if test="status !=null and status != ''">-->
    <!--                and bet.tb_status = #{status}-->
    <!--            </if>-->
    <!--            <if test="startTime !=null and startTime !=''">-->
    <!--                <![CDATA[ and bet.create_time  >=  #{startTime}  ]]>-->
    <!--            </if>-->
    <!--            <if test="endTime !=null and endTime !=''">-->
    <!--                <![CDATA[ and bet.create_time <=  #{endTime}  ]]>-->
    <!--            </if>-->
    <!--        </where>-->
    <!--    </select>-->


    <!--    <select id="selectMoneyByIssue" resultType="java.util.HashMap">-->
    <!--        select sum (bet_amount) as allBetAmount ,sum (win_amount) as allWinAmount ,sum (back_amount) as allBackAmount from lottery_order_bet_record as bet-->
    <!--        <if test="params.issue != null or pa ">-->
    <!--            left join order_record as record on record.id = bet.order_id-->
    <!--        </if>-->

    <!--    </select>-->


    <select id="sumBetamountbyUserid" parameterType="Map" resultType="java.lang.Double">
        SELECT IFNULL(SUM(bet_amount), 0)
        from lottery_order_bet_record
        where user_id = #{memid}
          and room_id = #{roomid}
          and create_time between #{startDate} and #{endDate}
    </select>

    <select id="selectdllist" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select max(tt.dlzh)             dlzh,
               max(tt.dlid)             dlid,
               max(tt.dlcode)           dlcode,
               max(tt.renshu)           yjirenshu,
               max(tt.1jitz)
                                        yjitz,
               max(tt.1jiwin)           yjiwin,
               max(tt.1jinowin)         yjinowin,
               max(tt.1jcz)             yjicz,
               max(tt.paccount)         paccount,
               sum(pp.renshu)           ejirenshu,
               IFNULL(sum(pp.1jitz), 0) ejitz,
               sum(pp.1jiwin)           ejiwin,
               sum(pp.1jinowin)         ejinowin
                ,
               sum(pp.1jcz)             ejicz
                from (SELECT MAX(sid)             dlid,
                             max(s.share_account) dlzh,
                             MAX(pcode)           dlcode,
                             COUNT(s.id)          renshu,
                             sum(s.betAmount)     1jitz,
                             sum(s.winAmount)     1jiwin,
                             sum(s.nowinAmount)   1jinowin,
                             sum(s.payAmount)     1jcz,
                             max(s.xsaccount)     paccount
                FROM
                (
                SELECT t.account,
                       t.id,
                       x.id                         AS sid,
                       x.promotion_code             as pcode,
                       x.share_account              AS xsaccount,
                       t.share_account,
                       t.pay_amount                 AS payAmount,
                       IFNULL(SUM(o.bet_amount), 0) AS betAmount,
                       IFNULL(
                               SUM(
                                       CASE
                                               WHEN o.tb_status = 'WIN' THEN
                                                       o.win_amount - o.bet_amount
                                               END
                                       ),
                               0
                               )                    AS winAmount,
                       IFNULL(
                               SUM(
                                       CASE
                                               WHEN o.tb_status = 'NO_WIN' THEN
                                                       o.bet_amount
                                               END
                                       ),
                               0
                               )                    AS nowinAmount
                FROM app_member t
                             LEFT JOIN lottery_order_bet_record o ON t.id = o.user_id
                             JOIN app_member x ON t.share_account = x.account
                WHERE
                o.is_delete = 0
                  AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')
        <if test="params.startdate != null and params.startdate != ''">
            and o.update_time &gt;= '${params.startdate}'
        </if>
        <if test="params.enddate != null and params.enddate != ''">
            and o.update_time &lt; '${params.enddate}'
        </if>
        GROUP BY t.id
                ) s

                GROUP BY s.share_account ) tt
                left join (SELECT MAX(sid)             dlid,
                                  MAX(pcode)           dlcode,
                                  max(s.share_account) dlzh,
                                  COUNT(s.id)          renshu,
                                  sum(s.betAmount)     1jitz,
                                  sum(s.winAmount)     1jiwin,
                                  sum(s.nowinAmount)   1jinowin,
                                  sum(s.payAmount)     1jcz,
                                  max(s.xsaccount)     paccount
                FROM
                (
                SELECT t.account,
                       t.id,
                       x.id                         AS sid,
                       x.promotion_code             as pcode,
                       x.share_account              AS xsaccount,
                       t.share_account,
                       t.pay_amount                 AS payAmount,
                       IFNULL(SUM(o.bet_amount), 0) AS betAmount,
                       IFNULL(
                               SUM(
                                       CASE
                                               WHEN o.tb_status = 'WIN' THEN
                                                       o.win_amount - o.bet_amount
                                               END
                                       ),
                               0
                               )                    AS winAmount,
                       IFNULL(
                               SUM(
                                       CASE
                                               WHEN o.tb_status = 'NO_WIN' THEN
                                                       o.bet_amount
                                               END
                                       ),
                               0
                               )                    AS nowinAmount
                FROM app_member t
                             LEFT JOIN lottery_order_bet_record o ON t.id = o.user_id
                             JOIN app_member x ON t.share_account = x.account
                WHERE
                o.is_delete = 0
                  AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')

        <if test="params.startdate != null and params.startdate != ''">
            and o.update_time &gt;= '${params.startdate}'
        </if>
        <if test="params.enddate != null and params.enddate != ''">
            and o.update_time &lt; '${params.enddate}'
        </if>

        GROUP BY t.id
                ) s

                GROUP BY s.share_account ) pp on tt.dlzh = pp.paccount
                where 1 = 1
        <if test="params.account != null and params.account != ''">
            and tt.dlzh like '%${params.account}%'
        </if>
        <if test="params.id != null and params.id != ''">
            and tt.dlid = '${params.id}'
        </if>

        GROUP BY tt.dlid

        <if test="params.orderBy != null">
            order by ${params.orderBy} desc
        </if>
        <if test="params.limit != null and params.limit &gt;= 0 and params.offset != null">
            limit #{params.offset} , #{params.limit}
        </if>
    </select>

    <select id="countdl" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT COUNT(count1) FROM (
                SELECT COUNT(t1.dlid) as count1 from (
                SELECT MAX(sid)             dlid,
                       max(s.share_account) dlzh,
                       MAX(pcode)           dlcode,
                       COUNT(s.id)          renshu,
                       sum(s.betAmount)     1jitz,
                       sum(s.winAmount)     1jiwin,
                       sum(s.nowinAmount)   1jinowin,
                       sum(s.payAmount)     1jcz,
                       max(s.xsaccount)     paccount
                FROM
                (
                SELECT t.account,
                       t.id,
                       x.id                                                                               AS sid,
                       x.promotion_code                                                                   as pcode,
                       x.share_account                                                                    AS xsaccount,
                       t.share_account,
                       t.pay_amount                                                                       AS payAmount,
                       IFNULL(SUM(o.bet_amount), 0)                                                       AS betAmount,
                       IFNULL(SUM(CASE WHEN o.tb_status = 'WIN' THEN o.win_amount - o.bet_amount END), 0) AS winAmount,
                       IFNULL(SUM(CASE WHEN o.tb_status = 'NO_WIN' THEN o.bet_amount END), 0)             AS nowinAmount
                FROM app_member t
                             LEFT JOIN lottery_order_bet_record o ON t.id = o.user_id
                             JOIN app_member x ON t.share_account = x.account
                WHERE
                o.is_delete = 0
                  AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')
        <if test="params.startdate != null and params.startdate != ''">
            and o.update_time &gt;= '${params.startdate}'
        </if>
        <if test="params.enddate != null and params.enddate != ''">
            and o.update_time &lt; '${params.enddate}'
        </if>
        GROUP BY t.id
                ) s
                GROUP BY s.share_account
                ) t1
                left join (
                SELECT MAX(sid)             dlid,
                       MAX(pcode)           dlcode,
                       max(s.share_account) dlzh,
                       COUNT(s.id)          renshu,
                       sum(s.betAmount)     1jitz,
                       sum(s.winAmount)     1jiwin,
                       sum(s.nowinAmount)   1jinowin,
                       sum(s.payAmount)     1jcz,
                       max(s.xsaccount)     paccount
                FROM
                (
                SELECT t.account,
                       t.id,
                       x.id                                                                               AS sid,
                       x.promotion_code                                                                   as pcode,
                       x.share_account                                                                    AS xsaccount,
                       t.share_account,
                       t.pay_amount                                                                       AS payAmount,
                       IFNULL(SUM(o.bet_amount), 0)                                                       AS betAmount,
                       IFNULL(SUM(CASE WHEN o.tb_status = 'WIN' THEN o.win_amount - o.bet_amount END), 0) AS winAmount,
                       IFNULL(SUM(CASE WHEN o.tb_status = 'NO_WIN' THEN o.bet_amount END), 0)             AS nowinAmount
                FROM app_member t
                             LEFT JOIN lottery_order_bet_record o ON t.id = o.user_id
                             JOIN app_member x ON t.share_account = x.account
                WHERE
                o.is_delete = 0
                  AND o.tb_status IN ('WIN', 'NO_WIN', 'HE')
        <if test="params.startdate != null and params.startdate != ''">
            and o.update_time &gt;= '${params.startdate}'
        </if>
        <if test="params.enddate != null and params.enddate != ''">
            and o.update_time &lt; '${params.enddate}'
        </if>

        GROUP BY t.id
                ) s

                GROUP BY s.share_account ) t2 on t1.dlzh = t2.paccount
                where 1 = 1
        <if test="params.account != null and params.account != ''">
            and t1.dlzh like '%${params.account}%'
        </if>
        <if test="params.id != null and params.id != ''">
            and t1.dlid = '${params.id}'
        </if>

        GROUP BY t1.dlid) p3
    </select>


    <select id="selectdltree" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT t.account,
               t.id,
               t.promotion_code,
               x.share_account     ejif,
               t.share_account     yjif,
               t.pay_amount     AS payAmount,
               IFNULL(SUM(CASE
                       WHEN o.tb_status IN ('WIN', 'NO_WIN', 'HE') THEN
                               o.bet_amount
                       END), 0) AS betAmount,
               IFNULL(
                       SUM(
                               CASE
                                       WHEN o.tb_status = 'WIN' THEN
                                               o.win_amount - o.bet_amount
                                       END
                               ),
                       0
                       )        AS winAmount,
               IFNULL(
                       SUM(
                               CASE
                                       WHEN o.tb_status = 'NO_WIN' THEN
                                               o.bet_amount
                                       END
                               ),
                       0
                       )        AS nowinAmount
        FROM app_member t
                     join app_member x on t.share_account = x.account
                     LEFT JOIN lottery_order_bet_record o ON t.id = o.user_id where 1 = 1

        <if test="params.account != null and params.account != ''">
            and t.share_account = '${params.account}'
                    or x.share_account = '${params.account}'
        </if>

        GROUP BY t.id
        ORDER BY ejif asc, yjif
    </select>

    <select id="orderBetListById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lottery_order_bet_record
        where user_id = #{userId}
          and god_order_id &gt; 0
    </select>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_id, order_id, lottery_id, play_id, setting_id, play_name, issue, order_sn,
        bet_number, win_amount, bet_count, bet_amount, back_amount, god_order_id, tb_status,
        create_time, update_time, is_delete, win_count, is_push
    </sql>

    <select id="countJoinByExample" parameterType="java.lang.String" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*)
        from lottery_order_bet_record as bet
        <if test="whereSelect != null and whereSelect != ''">
            where ${whereSelect}
        </if>
    </select>

    <select id="selectJoinByExample" parameterType="com.caipiao.live.common.mybatis.entity.OrderBetRecordExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Join_Base_Column_List"/>
        from lottery_order_bet_record as bet
        <if test="params.whereSelect != null and params.whereSelect != ''">
            where ${params.whereSelect}
        </if>
        <if test="params.orderByClause != null">
            order by ${params.orderByClause}
        </if>
        <if test="params.limit != null and params.limit &gt;= 0 and params.offset != null">
            limit ${params.offset} , ${params.limit}
        </if>
    </select>

    <select id="selectSumBetamountByWait" parameterType="com.caipiao.live.common.mybatis.entity.OrderBetRecordExample"
            resultType="java.util.HashMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select sum(bet_amount) as sumBetAmount
        from lottery_order_bet_record as bet
        <if test="params.whereSelect != null and params.whereSelect != ''">
            where ${params.whereSelect}
              and bet.tb_status = 'WAIT'
        </if>
        <if test="params.whereSelect == null or params.whereSelect == ''">
            where bet.tb_status = 'WAIT'
        </if>
    </select>

    <select id="selectSumBetamountByAll" parameterType="com.caipiao.live.common.mybatis.entity.OrderBetRecordExample"
            resultType="java.util.HashMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select sum(bet_amount)  as sumBetAmount,
               sum(win_amount)  as sumWinAmount,
               sum(back_amount) as sumBackAmount
        from lottery_order_bet_record as bet
        <if test="params.whereSelect != null and params.whereSelect != ''">
            where ${params.whereSelect}
        </if>
    </select>

    <select id="selectSumBetamountByValid" parameterType="com.caipiao.live.common.mybatis.entity.OrderBetRecordExample"
            resultType="java.util.HashMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select sum(bet_amount) as sumBetAmount
        from lottery_order_bet_record as bet
        <if test="params.whereSelect != null and params.whereSelect != ''">
            where ${params.whereSelect}
              and (bet.tb_status = 'WIN' or bet.tb_status = 'NO_WIN' or bet.tb_status =
                                                                        'WAIT')
        </if>
        <if test="params.whereSelect == null or params.whereSelect == ''">
            where bet.tb_status = 'WAIT'
        </if>
    </select>

    <select id="selectSumUser" parameterType="com.caipiao.live.common.mybatis.entity.OrderBetRecordExample" resultType="java.util.HashMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) as userCount from (select distinct bet.user_id
                                           from lottery_order_bet_record as bet
        <if test="params.whereSelect != null and params.whereSelect != ''">
            where ${params.whereSelect}
        </if>
        ) as tb
    </select>

    <select id="queryWinOrLossEveryDay" resultType="com.caipiao.live.common.model.vo.order.OrderBetVo">
        SELECT SUM(bet_amount) betAmount, SUM(win_amount) winAmount, DATE_FORMAT(update_time, '%Y-%m-%d') `day`
        FROM lottery_order_bet_record
                WHERE user_id = #{userId}
                  AND tb_status IN ('WIN', 'NO_WIN')
        <if test="startDate != null and startDate != ''">
            AND update_time &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND update_time &lt;= #{endDate}
        </if>
        GROUP BY DATE_FORMAT(update_time, '%Y-%m-%d')
    </select>

    <select id="queryWinOrLossEveryDayNew" resultType="com.caipiao.live.common.model.vo.order.OrderBetVo">
        SELECT SUM(win_amount) winAmount, DATE_FORMAT(update_time, '%Y-%m-%d') `day`
        FROM lottery_order_bet_record
                WHERE user_id = #{userId}
                  AND tb_status = 'WIN'
        <if test="startDate != null and startDate != ''">
            AND update_time &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND update_time &lt;= #{endDate}
        </if>
        GROUP BY DATE_FORMAT(update_time, '%Y-%m-%d')
    </select>

    <select id="queryBetEveryDayNew" resultType="com.caipiao.live.common.model.vo.order.OrderBetVo">
        SELECT SUM(bet_amount) betAmount, DATE_FORMAT(update_time, '%Y-%m-%d') `day`
        FROM lottery_order_bet_record
                WHERE user_id = #{userId}
                  AND tb_status in ('WIN', 'NO_WIN', 'HE')
        <if test="startDate != null and startDate != ''">
            AND update_time &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND update_time &lt;= #{endDate}
        </if>
        GROUP BY DATE_FORMAT(update_time, '%Y-%m-%d')
    </select>

    <select id="selectBetNumberByPlayIdAndPlayNameAndShuxing" resultType="com.caipiao.live.common.model.dto.order.OrderBetRecordCalcDTO">
        select IFNULL(SUM(t.bet_count), 0) as betCount, IFNULL(SUM(t.bet_amount), 0) as betAmount
        from lottery_order_bet_record t
        where t.issue = #{issue}
          and t.play_id = #{playId}
          and SUBSTRING_INDEX(bet_number, '@', 1)
                = #{playName}
          and SUBSTRING_INDEX(bet_number, '@', -1) = #{shuxing}
    </select>

    <select id="selectByPlayIdAndIssue" resultMap="BaseResultMap">
        select t.back_amount,
               t.create_time,
               t.god_order_id,
               t.id,
               t.is_delete,
               t.is_push,
               t.lottery_id,
               t.order_id,
               t.play_id,
               t.setting_id,
               t.tb_status,
               t.update_time,
               t.user_id,
               t.win_amount,
               t.win_count,
               t.play_name,
               t.bet_number,
               t.bet_count,
               t.bet_amount
        from lottery_order_bet_record t
        where t.issue = #{issue}
          and t.play_id = #{playId}
    </select>

    <select id="querySumBetAmount" resultType="java.math.BigDecimal">
        select sum(bet_amount)
        from lottery_order_bet_record
        where room_id = #{roomId}
          and is_delete = b'0'
    </select>

</mapper>